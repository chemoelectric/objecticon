#
# $Id$
#

package mail

import datastruct(SortTable), lang(Text)

#
# This class represents a content type
#
class ContentType()
   private readable
      type,
      subtype,
      parameters

   #
   # Set type type
   #
   public set_type(t)
      self.type := t
      link
   end

   #
   # Get the type
   #
   public get_type()
      return .type
   end

   #
   # Set subtype subtype
   #
   public set_subtype(s)
      self.subtype := s
      link
   end

   #
   # Get the subtype
   #
   public get_subtype()
      return .subtype
   end

   #
   # Get the parameter for the given key.
   #
   # :Parameters :
   # :  `key` - the key
   public get_parameter(key)
      return parameters.member(key)
   end

   #
   # Set the parameter to the given value
   # :Parameters :
   # :  `key` - the key
   # :  `value` - the value
   #
   public set_parameter(key, value)
      parameters.insert(key, value)
      link
   end

   public static parse_rfc2616(s)
      return RFC2616Parser().parse_content_type(s)
   end   

   public static parse(s)
      return RFC822Parser().parse_content_type(s)
   end   

   public to_rfc1521()
      local s, e
      s := type || "/" || subtype
      every e := parameters.entries() do
         s ||:= "; " || e.key || "=" || RFC822Parser.escape_1521_value(e.val)
      return s
   end

   public to_rfc2616()
      local s, e
      s := type || "/" || subtype
      every e := parameters.entries() do
         s ||:= "; " || e.key || "=" || RFC2616Parser.escape_value(e.val)
      return s
   end

   public new(type, subtype)
      self.type := type
      self.subtype := subtype
      self.parameters := SortTable(, Text.caseless_compare)
      return
   end
end
