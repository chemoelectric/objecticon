Primitive Tokens

   Token                Token Type      Flags

   identifier           IDENT            b e
   integer-literal      INTLIT           b e
   real-literal         REALLIT          b e
   string-literal       STRINGLIT        b e
   cset-literal         CSETLIT          b e
   ucs-literal          UCSLIT           b e
   end-of-file          EOFX

Reserved Words

   Token                Token Type      Flags

   abstract             ABSTRACT
   break                BREAK            b e
   by                   BY
   case                 CASE             b
   class                CLASS
   const                CONST
   create               CREATE           b
   default              DEFAULT          b
   do                   DO
   else                 ELSE
   end                  END
   every                EVERY            b
   fail                 FAIL             b e
   final                FINAL
   global               GLOBAL
   if                   IF               b
   import               IMPORT
   initial              INITIAL
   invocable            INVOCABLE
   link                 LINK             b e
   local                LOCAL
   native               NATIVE
   next                 NEXT             b e
   not                  NOT              b
   of                   OF
   optional             OPTIONAL
   override             OVERRIDE
   package              PACKAGE
   private              PRIVATE
   procedure            PROCEDURE
   protected            PROTECTED
   public               PUBLIC
   readable             READABLE
   record               RECORD
   repeat               REPEAT           b
   return               RETURN           b e
   static               STATIC
   succeed              SUCCEED          b e
   suspend              SUSPEND          b e
   then                 THEN
   to                   TO
   unless               UNLESS           b
   until                UNTIL            b
   while                WHILE            b

``Operator'' tokens not used in standard unary/binary syntax, see op.txt.

   Token                Token Type      Flags

   (                    LPAREN           b
   )                    RPAREN             e
   +:                   PCOLON
   ,                    COMMA
   -:                   MCOLON
   :                    COLON
   ;                    SEMICOL
   [                    LBRACK           b
   ]                    RBRACK             e
   {                    LBRACE           b
   }                    RBRACE             e

tokens starting with $ are alternate spellings for some tokens

   $(                   LBRACE           b
   $)                   RBRACE           e
   $<                   LBRACK           b
   $>                   RBRACK           e

Explanation of Flags

   b    indicates that the token may begin an expression.
   e    indicates that the token may end an expression.

   These two flags are used for semicolon insertion.  If a line
   ends with an "e" token, and the next token is a "b" token,
   a semicolon is inserted between the two tokens.
