#
# $Id$
#

package http

import util, net, mail, io

#
# Encapsulate one request to {HttpClient}.
#
class HttpRequest(SetFields, MimeHeaders)
   private readable 
      url,
      post_stream,
      method,
      data_file,
      data_stream,
      username,
      password,
      referer,
      range_start,
      range_end,
      content_type

   #
   # Set the desired url.
   #
   public set_url(url)
      self.url := url
   end

   #
   # Set a filename to send the data part of the response to.  If not
   # set then the data forms part of the HttpPage object returned.
   #
   # @param s the name of the file.
   #
   public set_data_file(s)
      data_file := s
   end

   #
   # Set the range of data to get; either being &null implies the
   # start or end of data respectively.
   #
   public set_range(s, e)
      self.range_start := s
      self.range_end := e
   end

   #
   # Set the data to be used in a POST request, as a stream to be read, and set
   # the method to "POST".
   #
   # @param   post_file    A filename
   #
   public set_post_stream(post_stream)
      set_method("POST")
      self.post_stream := post_stream
   end

   #
   # Convenience method to set the post data from a table
   # which represents html form post data.  The content type
   # is set appropriately too.
   #
   public set_html_form_data(t)
      set_post_stream(StringStream(URL.make_cgi_string(t)))
      set_content_type("application/x-www-form-urlencoded")
   end

   #
   # Convenience method to set the post data from a Message
   # which represents html form post data.  The content type
   # is set appropriately too.
   #
   # The Message object must have content type multipart/form-data,
   # and have an appropriate MultiPart set as its content object.
   #
   public set_multipart_form_data(m)
      set_post_stream(StringStream(m.to_rfc822()))
      set_content_type(m.get_content_type().to_rfc1521())
   end

   #
   # Set the content type of the post data.
   #
   public set_content_type(content_type)
      self.content_type := content_type
   end

   #
   # Set the request method type.  The default is {GET}, unless post data is set, in which
   # case the default is {POST}.
   #
   public set_method(method)
      self.method := method
   end

   #
   # Set the referer page.
   #
   public set_referer(s)
      self.referer := s
   end

   #
   # Set the username to use for authentication
   #
   public set_username(s)
      self.username := s
   end

   #
   # Set the password to use for authentication
   #
   public set_password(s)
      self.password := s
   end

   #
   # Set a stream to use to receive the data.
   #
   public set_data_stream(f)
      self.data_stream := f
   end

   public set_one(f)
      case f.attr of {
         "url": set_url(f.object_val(URL))
         "data_stream": set_data_stream(f.object_val(Stream))
         "post_stream": set_post_stream(f.object_val(Stream))
         "range": set_range!(f.int_list_val())
         "method": set_method(f.string_val())
         "referer": set_referer(f.string_val())
         "username": set_username(f.string_val())
         "password": set_password(f.string_val())
         "content_type": set_content_type(f.string_val())
         "html_form_data": set_html_form_data(f.table_val())
         "multipart_form_data": set_multipart_form_data(f.object_val(Message))
         default: fail
      }
      return
   end

   public new(a[])
      cast(self,MimeHeaders).new()
      method := "GET"
      set_fields(a)
      return
   end
end


