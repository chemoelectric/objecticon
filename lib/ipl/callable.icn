package ipl.callable

import
   lang(Prog)

#
# Try to convert {x} to something which can be invoked.  This follows
# the logic used in converting an expression for invocation (see the
# function general_call in invoke.r).
#
# @param x the thing to convert
# @param n the optional number of args for an operator
#
procedure callable(x, n)
   if type(x) == ("procedure" | "class" | "constructor" | "methp") then
      return x
   if x := integer(x) then
      return x
   if x := string(x) &
      x := (Prog.get_named_global(x) | Prog.get_operator(x, \n) | Prog.get_function(x) | Prog.get_keyword(x)) then
      return x
end
