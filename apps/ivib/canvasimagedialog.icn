#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui, io


############################################################################
#
#
#
class CanvasImageDialog(CanvasComponentDialog)
   public img_field, scale_up, cache_cb, img

   public set_vals()
      cast(self,CanvasComponentDialog).set_vals()

      c.scale_up_flag := scale_up.get_status()

      if cache_cb.is_checked() then {
         c.image_cache := img_field.get_contents()
         c.image_str := &null
      } else {
         c.image_cache := &null
         c.image_str := img_field.get_contents()
      }
   end

   public on_file_browse()
      local fd, s, l, p
      fd := FileDialog()
      l := []
      s := img_field.get_contents()
      if is_image_file(s) then {
         p := Files.get_path(s).canonical()
         put(l, p.parent().str())                             
         fd.set_file(p.get(-1))                               
      }
      put(l, \Ivib.last_icon_dir)
      fd.set_directories(l)
      fd.set_filters(["*.gif;*.png;*.jpg","*"])
      fd.show_modal(self)
      Ivib.last_icon_dir := fd.get_directory()
      if s := fd.get_result() then {
         self.img.set_image(s)
         img_field.set_contents(s)
      }
   end

   public on_name_browse()
      local d, s
      d := NamedImageDialog(img_field.get_contents())
      d.show_modal(self)
      if s := d.get_result() then {
         self.img.set_image(s)
         img_field.set_contents(s)
      }
   end

   public on_img_field()
      img.set_image(img_field.get_contents())
   end

   public setup() 
      local p, q
      cast(self,CanvasComponentDialog).setup()

      p := TabItem()
      p.set_layout(GridLayout())
      p.set_label("General")
      add_tab_at_front(p)

      q := Component("layout=",GridLayout("flush"), "c:eol", "c:x_fill", "c:x_weight=1.0")
      img := Image("size=60,60")
      img.clear_constraints()
      q.add(img)
      q.add(img_field := TextField("size=200",
                                   "e:content_changed=", on_img_field))
      p.add(q)

      q := Component("layout=",GridLayout("flush"), "c:x_align=l", "c:eol")
      q.add(TextButton("label=File...", "e:action=",on_file_browse))
      q.add(TextButton("label=Name...", "e:action=",on_name_browse))
      q.add(cache_cb := CheckBox("label=Cache", "c:eol"))
      p.add(q)

      scale_up := CheckBox("c:eol")
      scale_up.set_label("Scale up image")
      if \c.scale_up_flag then
         scale_up.set_is_checked(&yes)
      p.add(scale_up)

      if \c.image_str then {
         img.set_image(c.image_str)
         img_field.set_contents(c.image_str)
      }
      if \c.image_cache then {
         img.set_image(c.image_cache)
         img_field.set_contents(c.image_cache)
         cache_cb.set_is_checked(&yes)
      }

   end    
end

