&pos &subject: 3 abcde
&pos &subject: 1 wxyz
"main"
"T"
"L"
"s"
"a"
&null
"&error"
"table_*[\"abc\"]"
"table_*[\"abc\"]"
"list_*[1]"
"list_*[2]"
"list_*[3]"
"list_*[200]"
"list_*[191]"
"list_*[1]"
"list_*[2]"
"list_*[3]"
"list_*[200]"
"list_*[191]"
"record complex_*.r"

----------------------------------------------------------------------
co-expression_1(1)

recurse local identifiers:
   a = 5
   b = 14
   x = 19
   y = -9
recurse local identifiers:
   a = 4
   b = 10
   x = 14
   y = -6
recurse local identifiers:
   a = 3
   b = 7
   x = 10
   y = -4

global identifiers:
   classof = function classof
   complex = constructor complex
   copy = function copy
   cset = function cset
   display = function display
   exit = function exit
   find = function find
   get = function get
   iand = function iand
   image = function image
   imagex = procedure imagex
   integer = function integer
   io.BufferStream = class io.BufferStream
   io.DescStream = class io.DescStream
   io.FileOpt = class io.FileOpt
   io.FileStream = class io.FileStream
   io.Stat = class io.Stat
   io.Stream = class io.Stream
   io.stop = procedure io.stop
   io.write = procedure io.write
   is = function is
   lang.fatal = procedure lang.fatal
   list = function list
   main = procedure main
   main2 = procedure main2
   many = function many
   map = function map
   move = function move
   name = function name
   numeric = function numeric
   pop = function pop
   pos = function pos
   proc = function proc
   push = function push
   put = function put
   recurse = procedure recurse
   repl = function repl
   runerr = function runerr
   string = function string
   subtype = function subtype
   tab = function tab
   table = function table
   type = function type
   upto = function upto
   util.Field = class util.Field
   util.SetFields = class util.SetFields
   util.error = procedure util.error
   util.to_flag = procedure util.to_flag
   variable = function variable
----------------------------------------------------------------------
co-expression_1(1)

recurse local identifiers:
   a = 5
   b = 14
   x = 19
   y = -9
recurse local identifiers:
   a = 4
   b = 10
   x = 14
   y = -6
recurse local identifiers:
   a = 3
   b = 7
   x = 10
   y = -4
recurse local identifiers:
   a = 2
   b = 5
   x = 7
   y = -3
recurse local identifiers:
   a = 1
   b = 4
   x = 5
   y = -3
main local identifiers:
   a = 1
   x = 2
   l0 = list_59 = []
   l1 = list_60 = ['ABCDEFGHIKLMNOPQ...']
   l2 = list_61 = ["supercalifragili...","expialidocious"]
   l3 = list_62 = [1.618033989,2.718281828,3.141592654]
   l4 = list_63 = [1,2,3,4]
   l5 = list_64 = [1,2,3,4,5]
   l6 = list_65 = [1,2,3,4,5,6]
   l7 = list_66 = [1,2,3,...,5,6,7]
   l8 = list_67 = [1,2,3,...,6,7,8]
   l9 = list_68 = [list_59 = [],list_60(1),list_61(2),...,list_65(6),list_66(7),list_67(8)]
   y = 3

global identifiers:
   classof = function classof
   complex = constructor complex
   copy = function copy
   cset = function cset
   display = function display
   exit = function exit
   find = function find
   get = function get
   iand = function iand
   image = function image
   imagex = procedure imagex
   integer = function integer
   io.BufferStream = class io.BufferStream
   io.DescStream = class io.DescStream
   io.FileOpt = class io.FileOpt
   io.FileStream = class io.FileStream
   io.Stat = class io.Stat
   io.Stream = class io.Stream
   io.stop = procedure io.stop
   io.write = procedure io.write
   is = function is
   lang.fatal = procedure lang.fatal
   list = function list
   main = procedure main
   main2 = procedure main2
   many = function many
   map = function map
   move = function move
   name = function name
   numeric = function numeric
   pop = function pop
   pos = function pos
   proc = function proc
   push = function push
   put = function put
   recurse = procedure recurse
   repl = function repl
   runerr = function runerr
   string = function string
   subtype = function subtype
   tab = function tab
   table = function table
   type = function type
   upto = function upto
   util.Field = class util.Field
   util.SetFields = class util.SetFields
   util.error = procedure util.error
   util.to_flag = procedure util.to_flag
   variable = function variable
----------------------------------------------------------------------
