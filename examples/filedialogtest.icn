import gui,io,ipl.options,lang

procedure main(a)
   local d,opts
   opts := options(a, [Opt("we",, "Warn on existing file"),
                       Opt("re",, "Require existing file"),
                       Opt("de",, "Disallow existing file"),
                       Opt("l",, "Loop repeatedly, re-showing the dialog"),
                       Opt("k",, "Keep directory between uses"),
                       Opt("m",, "Multiple file mode"),
                       Opt("nf",, "Empty files list"),
                       Opt("ns",, "No file suggestions"),
                       Opt("ip",, "Image preview")])

   d :=  FileDialog().
      set_label("A File Dialog").
      set_filters(["*", "*.icn", "*.c", "*.txt"]).
      set_directories([Files.get_temp(), "/non/existent/path"])

   if /opts["nf"] then
      d.set_files(["one.icn", "two.icn", "three.icn", "/tmp/four.icn", "/tmp/five.icn"])

   if \opts["ns"] then
      d.set_file_suggestions(&no)

   if \opts["we"] then
      d.set_existing_file_mode(FileDialog.WARN)

   if \opts["re"] then
      d.set_existing_file_mode(FileDialog.REQUIRE)

   if \opts["de"] then
      d.set_existing_file_mode(FileDialog.DISALLOW)

   if \opts["m"] then
      d.set_multiple_files(&yes)

   if \opts["ip"] then
      d.add_image_preview()

   d.set_path(a[1])
   repeat{
      d.show_modal()
      write("d.get_result()=", to_string(d.get_result()) | "FAILED")
      write("d.get_result_path()=", to_string(d.get_result_path()) | "FAILED")
      write("d.get_directory()=", image(d.get_directory()))
      if /opts["m"] then {
         write("d.get_file()=", image(d.get_file()))
      }
      if /opts["l"] then break
      if \opts["k"] then
         d.keep_directory()
   }
end

