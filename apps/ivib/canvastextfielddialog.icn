#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui


############################################################################
#
#
#
class CanvasTextFieldDialog(CanvasComponentDialog)
   public 
      contents, 
      filter,
      is_editable_cb,
      move_on_rpress_cb,
      ucs_cb

   public override set_vals()
      CanvasComponentDialog.set_vals()
      c.set_contents(contents.get_contents())
      c.filter_str := filter.get_contents()
      c.is_editable_flag := is_editable_cb.get_status()
      c.move_on_rpress_flag := move_on_rpress_cb.get_status()
   end

   private on_ucs_cb()
      local t
      t := if ucs_cb.is_checked() then "ucs" else "string"
      contents.set_contents(text_convert(contents.get_contents(), t))
      filter.set_contents(text_convert(filter.get_contents(), t))
   end

   public override setup()
      local p, l

      CanvasComponentDialog.setup()

      p := TabItem()
      p.set_layout(GridLayout().set_extra("cells"))
      p.set_label("General")
      add_tab_at_front(p)

      l := Label()
      l.set_label("Initial contents : ")
      p.add(l)
      
      contents := TextField().set_constraint("eol", &yes)
      contents.set_contents(c.contents)
      p.add(contents)

      l := Label()
      l.set_label("Filter : ")
      p.add(l)
      
      filter := TextField().set_constraint("eol", &yes)
      filter.set_contents(c.filter_str)
      p.add(filter)

      is_editable_cb := CheckBox().set_label("Is editable").set_constraint("eol", &yes).set_constraint("w", 2)
      if \c.is_editable_flag then
         is_editable_cb.set_is_checked(&yes)
      p.add(is_editable_cb)

      move_on_rpress_cb := CheckBox().set_label("Move cursor on &rpress").set_constraint("eol", &yes).set_constraint("w", 2)
      if \c.move_on_rpress_flag then
         move_on_rpress_cb.set_is_checked(&yes)
      p.add(move_on_rpress_cb)

      ucs_cb := CheckBox().set_label("Ucs content").set_constraint("w", 2)
      if type(c.contents) == "ucs" then
         ucs_cb.set_is_checked(&yes)
      ucs_cb.connect(self.on_ucs_cb, Event.ACTION)
      p.add(ucs_cb)
   end
end

