package gui

import util

# This record type gives, for each displayed suggestion, the label to
# display in the popup and the string to set in the field on
# selection, and the cursor position to go to.
#
record CompleteElement(label, str, pos)

# An `ItemPaint` class for displaying `CompleteElement`s with strings
# in their label fields.
#
class CompleteElementItemPaint(ItemPaint)
   public get_width(W, data)
      return W.text_width(data.label)
   end

   public get_constant_height(W)
      return W.get_line_height()
   end

   public get_size(W, data)
      return gui.Size(W.text_width(data.label), W.get_line_height())
   end

   public draw(W, data, x, y)
      W.draw_string(x, y + W.get_line_ascent(), data.label)
   end
end

# This class is a {TextField} which provides suggested insertion text when
# tab is pressed.
#
# `do_request` should return a list of `CompleteElement` records.
#
abstract class CompleteField(SuggestField)
   public create_popup()
      return ItemPaintList().
         set_item_paint(CompleteElementItemPaint()).
         set_item_border(EmptyBorder().
                             set_insets(Gui.TEXT_INSET, Gui.TEXT_INSET, 0, 0).
                             set_x_align(Align.L))
   end

   public convert_element(o)
      return text(o.str)
   end

   public synch_contents(ev)
      local s, e
      e := popup.object_get_selections()[1] | fail
      s := convert_element(e) | contents[1:1]
      assign_contents(s, e.pos, applied_event := ev, toggle_flag(select_using_enter_flag))
   end

   public new()
      SuggestField.new()
      set_select_using_enter(&yes)
      set_popup_on_tab(&yes)
      return
   end
end
