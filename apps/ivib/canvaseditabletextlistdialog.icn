#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui

############################################################################
#
#
#
class CanvasEditableTextListDialog(CanvasComponentDialog)
   public 
      contents,
      is_editable_cb,
      move_on_rpress_cb,
      ucs_cb

   public set_vals()
      c.set_contents(contents.get_contents())
      c.is_editable_flag := is_editable_cb.get_status()
      c.move_on_rpress_flag := move_on_rpress_cb.get_status()
      cast(self,CanvasComponentDialog).set_vals()
   end

   private on_ucs_cb()
      if ucs_cb.is_checked() then
         contents.set_contents([u""])
      else
         contents.set_contents([""])
   end

   public setup()
      local p

      cast(self,CanvasComponentDialog).setup()

      p := TabItem()
      p.set_layout(GridLayout())
      add_tab_at_front(p)
      p.set_label("Contents")
      contents := EditableTextList().set_constraint("eol", &yes)
      contents.set_size(200, 200)
      contents.set_contents(copy(c.get_contents()))
      p.add(contents)

      is_editable_cb := CheckBox().set_label("Is editable").set_constraint("eol", &yes)
      if \c.is_editable_flag then
         is_editable_cb.set_is_checked(&yes)
      p.add(is_editable_cb)

      move_on_rpress_cb := CheckBox().set_label("Move on &rpress").set_constraint("eol", &yes)
      if \c.move_on_rpress_flag then
         move_on_rpress_cb.set_is_checked(&yes)
      p.add(move_on_rpress_cb)

      ucs_cb := CheckBox().set_label("Ucs content")
      if type(c.contents[1]) == "ucs" then
         ucs_cb.set_is_checked(&yes)
      ucs_cb.connect(self.on_ucs_cb, Event.ACTION)
      p.add(ucs_cb)
   end
end

