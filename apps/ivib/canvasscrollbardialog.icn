#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui

############################################################################
#
# Dialog box for a CanvasScrollBar
#
class CanvasScrollBarDialog(CanvasComponentDialog)
   public 
      slider,          
      total_size,      
      page_size,       
      increment_size,  
      range_from,      
      range_to,        
      initial_value

   public validate_input()
      #
      # Check valid numeric fields
      #
      numeric(increment_size.get_contents()) | return alert_error(self, "Increment size is non-numeric")
      numeric(initial_value.get_contents()) | return alert_error(self, "Initial value is non-numeric")
      if slider.is_checked() then {
         numeric(range_from.get_contents()) | return alert_error(self, "Range from is non-numeric")
         numeric(range_to.get_contents()) | return alert_error(self, "Range to is non-numeric")
      } else {
         numeric(page_size.get_contents()) | return alert_error(self, "Page size is non-numeric")
         numeric(total_size.get_contents()) | return alert_error(self, "Total size is non-numeric")
      }
      return CanvasComponentDialog.validate_input()
   end

   public set_vals()
      c.set_increment_size(numeric(increment_size.get_contents()))
      c.set_value(numeric(initial_value.get_contents()))
      if slider.is_checked() then
         c.set_range(numeric(range_from.get_contents()), numeric(range_to.get_contents()))
      else {
         c.is_range_flag := &null
         c.set_total_size(numeric(total_size.get_contents()))
         c.set_page_size(numeric(page_size.get_contents()))
      }
      CanvasComponentDialog.set_vals()
   end

   public on_slider()
      page_size.toggle_is_shaded()
      total_size.toggle_is_shaded()
      range_from.toggle_is_shaded()
      range_to.toggle_is_shaded()
   end

   public setup()
      local p, l

      CanvasComponentDialog.setup()

      p := TabItem()
      p.set_layout(GridLayout().set_extra("borders"))
      p.set_label("General")
      add_tab_at_front(p)

      slider := CheckBox().set_constraint("eol", &yes)
      slider.connect(self.on_slider, Event.ACTION)
      slider.set_label("Slider")
      p.add(slider)

      l := Label()
      l.set_label("Increment size : ")
      p.add(l)
      
      increment_size := TextField().set_constraint("eol", &yes)
      increment_size.set_size(scale(100))
      increment_size.set_contents(c.increment_size)
      p.add(increment_size)

      l := Label()
      l.set_label("Page size : ")
      p.add(l)
      
      page_size := TextField().set_constraint("eol", &yes)
      page_size.set_size(scale(100))
      p.add(page_size)

      l := Label()
      l.set_label("Total size : ")
      p.add(l)
      
      total_size := TextField().set_constraint("eol", &yes)
      total_size.set_size(scale(100))
      p.add(total_size)

      l := Label()
      l.set_label("Range from : ")
      p.add(l)
      
      range_from := TextField()
      range_from.set_size(scale(100))
      p.add(range_from)

      l := Label()
      l.set_label("to")
      p.add(l)
      
      range_to := TextField().set_constraint("eol", &yes)
      range_to.set_size(scale(100))
      p.add(range_to)

      if \c.is_range_flag then {
         range_from.set_contents(c.lo)
         range_to.set_contents(c.hi)
         slider.set_is_checked(&yes)
         page_size.set_is_shaded(&yes)
         total_size.set_is_shaded(&yes)
      } else {
         page_size.set_contents(c.page_size)
         total_size.set_contents(c.total_size)
         range_from.set_is_shaded(&yes)
         range_to.set_is_shaded(&yes)
      }

      l := Label()
      l.set_label("Initial value : ")
      p.add(l)
      
      initial_value := TextField()
      initial_value.set_size(scale(100))
      initial_value.set_contents(c.get_value())
      p.add(initial_value)
   end
end


