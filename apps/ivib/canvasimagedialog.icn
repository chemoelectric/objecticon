#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui, io


############################################################################
#
#
#
class CanvasImageDialog(CanvasComponentDialog)
   public img_field, fill_dim, cache_cb, img

   public set_vals()
      CanvasComponentDialog.set_vals()

      c.fill_dimensions := fill_dim.get_value()

      if cache_cb.is_checked() then {
         c.image_cache := img_field.get_contents()
         c.image_str := &null
      } else {
         c.image_cache := &null
         c.image_str := img_field.get_contents()
      }
   end

   public on_file_browse()
      local fd, s, l, p
      fd := FileDialog().set_existing_file_mode(FileDialog.REQUIRE)
      l := []
      s := img_field.get_contents()
      if is_image_file(s) then {
         p := FilePath(s).canonical()
         put(l, p.parent().str())                             
         fd.set_file(p.get(-1))                               
      }
      put(l, Ivib.last_icon_dir)
      fd.set_directories(l)
      fd.set_filters(["*.gif;*.png;*.jpg","*"])
      fd.show_modal(self)
      if s := fd.get_result() then {
         Ivib.last_icon_dir := fd.get_directory()
         self.img.set_image(s)
         img_field.set_contents(s)
      }
   end

   public on_name_browse()
      local d, s
      d := NamedImageDialog(img_field.get_contents())
      d.show_modal(self)
      if s := d.get_result() then {
         self.img.set_image(s)
         img_field.set_contents(s)
      }
   end

   public on_img_field()
      img.set_image(img_field.get_contents())
   end

   public setup() 
      local p, q
      CanvasComponentDialog.setup()

      p := TabItem()
      p.set_layout(GridLayout())
      p.set_label("General")
      add_tab_at_front(p)

      q := Component().set_layout(GridLayout().set_doi(0)).set_constraint("eol", &yes).set_constraint("x_fill", &yes).set_constraint("x_weight", 1.0)
      img := Image().set_size(60,60)
      img.clear_constraints()
      q.add(img)
      q.add(img_field := TextField().set_size(200).connect( on_img_field, Event.CONTENT_CHANGED))
      p.add(q)

      q := Component().set_layout(GridLayout().set_doi(0)).set_constraint("x_align", "l").set_constraint("eol", &yes)
      q.add(TextButton().set_label("File...").connect(on_file_browse, Event.ACTION))
      q.add(TextButton().set_label("Name...").connect(on_name_browse, Event.ACTION))
      q.add(cache_cb := CheckBox().set_label("Cache").set_constraint("eol", &yes))
      p.add(q)

      q := Component().set_layout(GridLayout().set_doi(0)).set_constraint("eol", &yes).set_constraint("x_fill", &yes).set_constraint("x_weight", 1.0)
      q.add(Label().set_label("Fill dimensions"))
      fill_dim := RangeSpin().
         set_range(0, 2).
         set_value(c.fill_dimensions)
      q.add(fill_dim)
      p.add(q)

      if \c.image_str then {
         img.set_image(c.image_str)
         img_field.set_contents(c.image_str)
      }
      if \c.image_cache then {
         img.set_image(c.image_cache)
         img_field.set_contents(c.image_cache)
         cache_cb.set_is_checked(&yes)
      }

   end    
end

