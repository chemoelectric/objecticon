#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui


############################################################################
#
# Class for representing a RangeSpin on the canvas.
#
class CanvasRangeSpin(CanvasComponent,RangeSpin)
   public value

   #
   # Generate code into Code object c.
   #
   public gen_code(c)
      local s
      cast(self,CanvasComponent).gen_code(c)
      if \self.lo | \self.hi then {
         s := "set_range(" || (\self.lo|"&null") || ", " ||
            (\self.hi|"&null") || ")" 
         c.chain(s)
      }
      
      c.chain("set_value(" || value || ")")
      c.chain("set_increment_size(" || self.increment_size || ")")
   end

   #
   # Duplicate object.
   #
   public dup(pc)
      local c
      c := CanvasRangeSpin()
      cast(self,CanvasComponent).dup_fields(c)
      c.set_range(self.lo, self.hi)
      c.value := self.value
      c.set_value(c.value)
      return c
   end

   public post_decode()
      cast(self,CanvasComponent).post_decode()
      set_value(value)
   end

   #
   # Return the I/O template.
   #
   public static get_template()
      suspend CanvasComponent.get_template() |
          ["Hi", "hi"] |
          ["Lo", "lo"] |
          ["Increment Size", "increment_size"] |
          ["Value", "value"]
   end

   #
   # Open the configuration dialog box.
   #
   public dialog()
      return CanvasRangeSpinDialog(self)
   end

   public allows_null_height()
      return 1
   end

   public allows_null_width()
      return 1
   end

   public new()
      cast(self,RangeSpin).new()
      cast(self,CanvasComponent).new()
      self.class_name := "RangeSpin"
      self.import_name := "gui"
      self.name := "range_spin"
      return
   end
end

