# $Id$

import gui, io

class LayoutField(Component)
   public 
      layouts,
      layout_tbl,
      edit_layout_button

   public on_edit_layout()
      get_contents().dialog().show_modal(parent_dialog)
   end

   public on_layout_change()
      if layouts.get_selection() = 1 then
         edit_layout_button.set_is_shaded(&yes)
      else
         edit_layout_button.set_is_shaded(&no)
      fire(Event.SELECTION_CHANGED)
   end

   public get_contents()
      local l, i

      i := layouts.get_selection()
      if i = 1 then
         return &null

      l := layout_tbl[i] 
      if /l then {
         l := case i of {
            2: CanvasGridLayout()
            default: stop()
         }
         l.change_canvas(parent_dialog.c.parent_Canvas)
         l.rename()
         insert(layout_tbl, i, l)
      }
      return l
   end

   public set_contents(c)
      layout_tbl := table()
      if /c then
         edit_layout_button.set_is_shaded(&yes)
      else {
         layouts.set_selection(case classof(c) of {
            CanvasGridLayout : 2
            default : stop("Unknown layout type")
         })
         layout_tbl[layouts.get_selection()] := c
      }
      return self
   end

   public setup()
      self.set_layout(GridLayout().set_doi(0))
      layouts :=  List().set_selection_list(["&null","GridLayout"])
      layouts.connect(self.on_layout_change, Event.SELECTION_CHANGED)
      self.add(layouts)
      edit_layout_button := TextButton().set_label("Edit...").set_constraint("x_align", "l").set_constraint("eol", &yes)
      edit_layout_button.connect(self.on_edit_layout, Event.ACTION)
      self.add(edit_layout_button)
   end

   public new()
      cast(self,Component).new()
      setup()
      self.set_constraint("x_fill", &yes)
      self.set_constraint("x_weight", "1")
      return
   end
end



