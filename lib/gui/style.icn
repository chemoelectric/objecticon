package gui

import ipl.graphics

class Style()
   public dispose(W)
      BevelDispose(W)
   end

   public dispose_all()
      BevelDisposeAll()
   end

   #
   # Draw a raised rectangle.
   #
   public draw_raised_rectangle(W, x, y, w, h, width)
      BevelRectangle(W, x, y, w, h, width)
   end

   #
   # Draw a sunken rectangle.
   #
   public draw_sunken_rectangle(W, x, y, w, h, width)
      BevelRectangle(W, x, y, w, h, -width)
   end

   public draw_hilite_line(W, x1, y1, x2, y2)
      bev_lookup(W).hilite.draw_line(x1, y1, x2, y2)
   end

   public draw_shadow_line(W, x1, y1, x2, y2)
      bev_lookup(W).shadow.draw_line(x1, y1, x2, y2)
   end

   public get_hilite_color(W)
      return bev_lookup(W).hilite.get_fg()
   end

   public get_shadow_color(W)
      return bev_lookup(W).shadow.get_fg()
   end

   public shade_rectangle(W, x, y, w, h)
      W.filter("shade,4,5000,40000", x, y, w, h)
   end

   public down_rectangle(W, x, y, w, h)
      W.filter("linear,0.85,0.85,0.85", x, y, w, h)
   end

   public selection_rectangle(W, x, y, w, h)
      W.filter("linear,0.6,0.75,1.0", x, y, w, h)
   end

   public draw_dashed_rectangle(W, x, y, w, h)
      local cw
      cw := bev_lookup(W).shadow.clone().set_fill_style("masked").set_pattern("gray")
      cw.draw_rectangle(x, y, w, h)
      cw.uncouple()
   end

   public draw_focus_rectangle(W, x, y, w, h)
      local cw
      cw := W.clone().set_fg("red").set_fill_style("masked").set_pattern("gray")
      cw.draw_rectangle(x, y, w, h)
      cw.uncouple()
   end

   public draw_highlight_rectangle(W, x, y, w, h)
      local cw
      cw := W.clone().set_fg("blue").set_fill_style("masked").set_pattern("gray")
      cw.draw_rectangle(x, y, w, h)
      cw.uncouple()
   end

   public draw_shadow_text_cursor(W, x, y, h)
      local cw
      cw := bev_lookup(W).shadow.clone()
      cw.draw_line(x, y, x, y + h - 1)
      cw.draw_line(x - 1, y, x - 1, y + h - 1)
      cw.uncouple()
   end

   public draw_text_cursor(W, x, y, h)
      local cw
      cw := W.clone().set_fg("red")
      cw.draw_line(x, y, x, y + h - 1)
      cw.draw_line(x - 1, y, x - 1, y + h - 1)
      cw.uncouple()
   end

   public create_tooltip_label()
      return Label().
         set_bg("pale yellow").
         set_font("sans,10").
         set_fg("black").
         set_border(CompoundBorder(PlainBorder().set_line_width(1),
                                   EmptyBorder().set_insets(3,3,2,2)))
   end

   public polish(obj)
   end

   public allow_popup(obj)
$ifdef _X_WINDOW_SYSTEM
      return
$endif
   end

   public distance2ticker_rate(d)
      local r
      r := 200 - 6*d
      r <:= 20
      r >:= 200
      return r
   end
end


