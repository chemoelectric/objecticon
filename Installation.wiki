#summary Installation of Object Icon
<wiki:toc max_depth="3" />
== Prerequisites ==

 * GNU make
 * autoconf (at least version 2.61), if you build direct from the subversion source


== Installing from the subversion source repository ==
Use the following command to checkout a read-only copy of the source code :-

{{{svn co http://objecticon.googlecode.com/svn/trunk/ objecticon}}}

This will create a directory `objecticon` under the present directory (you can change the last parameter to create a different directory name if you want).

Then `cd` into that directory and run the command `autoconf`.  This will create a `configure` script.

Then proceed just the same as if you had downloaded the .tar.gz file.

If you later wish to update your copy of the repository, `cd` into the directory and run the following :-

{{{svn up}}}
{{{make clean}}}

Then run `autoconf` again, and then `configure`, and then proceed as before.
== Installing from a tar.gz file ==

Extract the source code from the .tar.gz file with a command like

{{{tar xfz objecticon-1.0.tar.gz}}}

This will create a directory `objecticon-1.0` under the current directory.  Obviously the
version number may be different.

Change to the new directory and run 

{{{./configure}}}

This command accepts various options - run

{{{./configure --help}}}

to see them.  The `configure` script prints a summary of features when it finishes. For example.

{{{
Summary:-
Installation prefix    : /usr/local
X11 graphics           : yes
jpeg library           : yes
png library            : yes
zlib compression       : yes
dynamic loading        : yes
mysql lib              : yes
cairo lib              : yes
ssl lib                : yes
}}}

The meaning of these various options is as follows.

 * *Install prefix* - The root of the place to install to.  By default `/usr/local`, but can be changed with the `configure` option `--prefix`.  Note that you can also choose to run Object Icon from the same directory it was built in.
 * *X11 graphics* - Determines whether the Icon graphics facilities are built. The following two options only apply if this is 'yes'.
 * *jpeg library* -Allows loading of jpeg images.
 * *png library* -Allows loading of png images.
 * *zlib compression* - This allows icode files to be compressed with the -Z flag given to `oit`.
 * *dynamic loading* -Allows shared library (.so) files containing native functions to be loaded at runtime.
 * *mysql lib* -Allows a dynamic library to be built which provides an interface to mysql (package `mysql`).  Neither this option, nor the following dynamic libraries, have any effect either way on the runtime system proper.
 * *cairo lib* -Allows a dynamic library to be built which provides an interface to cairo graphics (package `cairo`).
 * *ssl lib* -Allows a dynamic library to be built which provides an interface to the openssl library (see the class `io.SsslStream`).

If you later wish to run `configure` again, please remember to run `make clean` afterwards in order to remove any object files built under the previous configuration.
== Compilation ==
After running `configure` successfully, just run the command
{{{
make
}}}
to build everything.  Note that GNU make is required.
== Testing ==
After `make` has completed successfully, you can optionally run some tests, as follows :-
{{{
make test
}}}
Various output will follow, which should hopefully end with the message "Testing successful."  If not, the problem with the failed test can be examined by comparing the expected output of a test with the actual output.  For example, if the io test failed, run
{{{
cd test
diff io.out io.std
}}}
to see the problem.
== Installing ==
You can optionally install to the directory specified with the `configure --prefix` option (by default `/usr/local`).   This is optional, because it is quite possible to run Object Icon from the same directory it was compiled in (see below).

If you do wish to install to the `--prefix` directory, then run the command
{{{
make install
}}}
After completion, `make install` prints the locations of some useful files which can be used to setup environment variables, define symbols in Makefiles, and peform an uninstall.  Please keep a note of these files' locations.

You might also wish to install a local copy of the auto-generated library documentation.  It is not installed by default because it is rather large (about 25MB).  If you want this to be installed, run
{{{
make install-libref
}}}
This command will take a couple of minutes to run.

== Environment variables ==
Object Icon requires some environment variables to be setup correctly.  To make doing this a bit easier, a file named `paths.sh` is provided which contains appropriate definitions.  Its location is printed by `make install`, or if you are running from the source distribution, it is in the distribution top-level directory.

Include this file by adding a line like this to your `.bashrc` file (or equivalent); obviously the actual path will vary, and note the dot at the beginning of the line.
{{{
. /usr/local/lib/objecticon-2.xx/paths.sh
}}}

If you are using bash, you can also use the `source` command instead of the dot syntax; but don't try to run `paths.sh` directly, since its contents must be loaded into the current shell environment.

== Uninstallation ==
There is an uninstallation script named `uninstall.sh`.  Its location is also printed by `make install`.  Running it will remove all of the files installed by `make install`.  Some empty directories may remain however.