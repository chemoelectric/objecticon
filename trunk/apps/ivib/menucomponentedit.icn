#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui, lang

############################################################################
#
#
#
class MenuComponentEdit(Dialog)
   public 
      c,
      label,                   # Dialog title
      tabset,
      code_tab,
      event_tab,
      event_flag,
      event_method,
      okay_result

   #
   # Get result flag
   #
   public get_okay_result()
      return self.okay_result
   end

   public on_event_flag()
      event_method.toggle_is_shaded()
      if not(event_method.is_shaded()) & *event_method.get_contents() = 0 then
         event_method.set_contents("on_" || code_tab.name.get_contents())
   end

   #
   # Add the tab to the TabSet
   #
   public add_tab(t) 
      tabset.add(t)
   end

   #
   # Add the tab to the TabSet, as the first item
   #
   public add_tab_at_front(t) 
      tabset.add(t, 1)
   end

   public on_cancel()
      self.dispose()
   end

   public validate_input()
      return
   end

   public on_okay()
      self.validate_input() | fail
      self.set_vals()
      self.okay_result := 1
      self.dispose()
   end

   public setup()
      local oc
      Class.get_name(c) ? {
         ="Canvas"
         label := tab(0) || " Setup"
      }
      self.set_wattrib("label", label)

      set_layout(GridLayout())

      tabset := TabSet("c:eol")
      add(tabset)

      code_tab := CodeTab(c)
      tabset.add(code_tab)

      event_tab := TabItem("label=Events")
      event_tab.set_layout(GridLayout("extra=borders"))
      tabset.add(event_tab)

      event_flag := CheckBox()
      event_flag.connect(self.on_event_flag, Event.ACTION)
      event_flag.set_label("Event handler")
      event_tab.add(event_flag)

      event_method := TextField("c:eol")
      event_method.set_size(120)
      event_tab.add(event_method)

      if /c.event_method then
         event_method.set_is_shaded(&yes)
      else  {
         event_flag.set_is_checked(&yes)
         event_method.set_contents(c.event_method)
      }

      oc := OkCancel()
      oc.listen(self)
      self.add(oc)
   end

   public set_vals()
      code_tab.set_vals()
      c.event_method := if event_flag.is_checked() then event_method.get_contents() else &null
   end

   public new(c)
      cast(self,Dialog).new()
      self.c := c
      setup()
      return
   end
end


