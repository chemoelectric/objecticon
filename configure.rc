#!/bin/rc
echo copying config files
cp config/files/mkfile .
cp config/files/lib/iyacc/mkfile lib/iyacc/mkfile
cp config/files/lib/mkfile lib/mkfile
cp config/files/lib/xml/mkfile lib/xml/mkfile
cp config/files/lib/ipl/mkfile lib/ipl/mkfile
cp config/files/lib/gui/mkfile lib/gui/mkfile
cp config/files/lib/main/mkfile lib/main/mkfile
cp config/files/lib/incl/mkfile lib/incl/mkfile
cp config/files/lib/parser/mkfile lib/parser/mkfile
cp config/files/base/oix/mkfile base/oix/mkfile
cp config/files/base/mkfile base/mkfile
cp config/files/base/rtt/mkfile base/rtt/mkfile
cp config/files/base/oit/mkfile base/oit/mkfile
cp config/files/base/common/mkfile base/common/mkfile
cp config/files/apps/ivib/mkfile apps/ivib/mkfile
cp config/files/apps/ivib/plugins/mkfile apps/ivib/plugins/mkfile
cp config/files/apps/mkfile apps/mkfile
cp config/files/apps/oidoc/mkfile apps/oidoc/mkfile
cp config/files/examples/mkfile examples/mkfile
mkdir -p bin examples/bin
x=`{pwd}
echo creating mkdefs
sed -e 's:@CONFIG_DIR@:'^$"x^':'  \
    <./config/files/mkdefs >mkdefs
echo creating paths.rc
cat >paths.rc <<EOF
# Object Icon path settings
OI_HOME=$x
OI_BIN=$$OI_HOME/bin
OI_LIB=$$OI_HOME/lib
OI_PATH=($$OI_LIB/main $$OI_LIB/gui $$OI_LIB/xml $$OI_LIB/parser $$OI_LIB/ipl)
OI_INCL=($$OI_LIB/incl)
OI_FONTINFO=$$OI_HOME/fontinfo.txt
bind -b $$OI_BIN /bin 
EOF
echo creating paths.sh
cat >paths.sh <<EOF
# Object Icon path settings
export OI_HOME="$x"
export OI_BIN="$$OI_HOME/bin"
export OI_LIB="$$OI_HOME/lib"
export OI_PATH="$$OI_LIB/main $$OI_LIB/gui $$OI_LIB/xml $$OI_LIB/parser $$OI_LIB/ipl"
export OI_INCL="$$OI_LIB/incl"
export OI_FONTINFO="$$OI_HOME/fontinfo.txt"
PATH="$$OI_BIN:$$PATH"
EOF
echo creating base/h/version.h
x=`{date}
# Plan9 specific version modifiers, to be changed if the branch version changes
# independently of the trunk.
uv=5
iv=5
sed -e 's/@CONFIG_DATE@/'^$"x^'/'  \
    -e 's/@PACKAGE_VERSION@/plan9/' \
    -e '/^#define UVersion/ s/$/ ".'^$uv^'"/' \
    -e '/^#define IVersion/ s/$/ ".'^$iv^'"/' \
    <./config/files/base/h/version.h >base/h/version.h
echo creating base/h/auto.h
cat >base/h/auto.h <<EOF
/* base/h/auto.h.  Generated by configure.rc  */
#define HAVE_GETHOSTENT 1
#define HAVE_VFORK 1
#define HAVE_PREAD 1
#define HAVE_PWRITE 1
#define HAVE_SYS_NERR 1
#define HAVE_SYS_ERRLIST 1
#define HAVE_MSG_NOSIGNAL 1
#define HAVE_UNSETENV_INT_RETURN 1
/* sizes of various fundamental types */
#define SIZEOF_SHORT 2
#define SIZEOF_INT 4
#define SIZEOF_LONG 4
#define SIZEOF_VOIDP 4
#define SIZEOF_DOUBLE 8
#define SIZEOF_LONG_LONG 8
/* System type */
#define PLAN9 1
EOF
if (test -f base/h/define.h)
   echo base/h/define.h already exists and is left untouched
if not {
   echo creating base/h/define.h
   cp config/files/base/h/define.h base/h/define.h
}
