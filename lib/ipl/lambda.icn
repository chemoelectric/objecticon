package ipl.lambda

global _a

#
# This is a class for making lambda-style functions.  For example:
#   f := Lambda.make{ _a[1] + 100 }
# sets f to be a function returning its first argument plus 100.  Note
# that args are passed to the function via a global variable _a, since
# icon syntax allows no other way.  Further, although the function can
# use any variables in scope, it cannot declare any itself.
# 
# Other examples:-
#   # Return the sum of the arguments, eg f(1,2,3) -> 6
#   f := Lambda.make{{ s := 0; every s +:= !_a ; s }}
#
class Lambda()
   private e

   private f(a[])
      local t
      t := _a
      _a := a
      suspend 1(!e, _a := t) do {
         t := _a
         _a := a
      }
      _a := t
   end

   public static make(e)
      return Lambda(e).f
   end

   private new(e)
      self.e := e
      return
   end
end

#
# Shorthand for {Lambda.make}
#
procedure lambda(e)
   return Lambda.make(e)
end
