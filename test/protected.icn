import lang

import io, ipl.test

class Parent()
   protected abc()
      return "abc"
   end

   public call_abc2()
      return abc2()
   end

   protected static ps1()
      return "ps1"
   end

   protected optional abc2()
end

class Child(Parent)
   public try1()
      return self.abc()
   end

   protected override abc2()
      return "abc2"
   end

   public static try_ps1()
      return ps1()
   end

   protected static ps2()
      return "ps2"
   end
end

class Dodger(Parent)
   public dodge(obj)
      print{"Class.getf(obj, \"abc\")", Class.getf(obj, "abc")}
   end

   public static dodge2()
      print{"Class.getf(Child, \"ps2\")", Class.getf(Child, "ps2")}
   end
end

procedure main()
   local c,d
   c := Child()
   d := Dodger()
   d.dodge(c)

   print{"c.try1()", c.try1()}
   print{"Class.getf(c, \"abc\")", Class.getf(c, "abc")}
   print{"c.call_abc2()", c.call_abc2()}
   print{"Class.getf(c, \"abc2\")", Class.getf(c, "abc2")}
   print{"Class.getf(Parent, \"ps1\")", Class.getf(Parent, "ps1")}
   print{"Class.getf(Child, \"ps2\")", Class.getf(Child, "ps2")}
   print{"Child.try_ps1()", Child.try_ps1()}
   Dodger.dodge2()

   write("ok")
end
