package ipl.io

import
   io(FileOpt, Files, FileStream, stop)

$ifdef _SOLARIS
import
   util(use)
$endif

#
# Return an open file to /dev/null.  The returned file is shared
# and so should not be closed.
#
procedure get_null()
   static nul
   initial
      nul := FileStream("/dev/null", FileOpt.RDWR) | stop("Can't open /dev/null: ", &why)
   return nul
end

#
# Return an open file to /dev/zero.  The returned file is shared
# and so should not be closed.
#
procedure get_zero()
   static zero
   initial
      zero := FileStream("/dev/zero", FileOpt.RDWR) | stop("Can't open /dev/zero: ", &why)
   return zero
end

#
# Return the cwd of the process with the given process id.
#
procedure get_process_cwd(pid)
$ifdef _PLAN9
   return Files.file_to_string("/proc/" || pid || "/fd") ? tab(upto('\n'))
$elsifdef _SOLARIS
   local t
   return use {
      t := Files.getcwd(),
      Files.chdir("/proc/" || pid || "/cwd") & Files.getcwd(),
      Files.chdir(t)
   }
$else
   return Files.readlink("/proc/" || pid || "/cwd")
$endif
end
