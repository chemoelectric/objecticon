package exception

global throw_handler, throw_signal, thrown, thrower

procedure throw(x)
   \throw_handler | runerr("throw(): no handler set")
   thrown := \x
   thrower := &current
   coact(throw_signal, throw_handler)
   runerr("throw(): code co-expression reactivated unexpectedly")
end

procedure rethrow(x)
   \throw_handler | runerr("rethrow(): no handler set")
   thrown := \x
   coact(throw_signal, throw_handler)
   runerr("rethrow(): code co-expression reactivated unexpectedly")
end

procedure try(code)
   local v, t
   initial throw_signal := []

   t := throw_handler
   throw_handler := &current
   v := @code
   throw_handler := t
   if v === throw_signal then
      &why := string(thrown) | ("Exception thrown:" || image(thrown))
   else
      return v
end
