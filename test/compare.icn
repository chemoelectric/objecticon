import io, lang, ipl.test

invocable f, r, A, fun, fun2

class A()
   public x,y

   public static fun() end
   public fun2() end
   public static native fun3()                       

   public new()
      x := 1 ; y := 2
      return
   end
end

record r(a,b,c,d)

procedure fun() end
procedure fun2() end

procedure f()
   local a1
   return [[1,2,3],      # 1
           r,            # 2
           r(1,2,3,4),   # 3
           A,            # 4
           a1 := A(),    # 5
           fun,          # 6
           A.fun,        # 7
           fun2,         # 8
           a1.fun2,      # 9
           A.fun3,       # 10
           repl("a",10), # 11
           repl(u"a",10), # 12
           table(),      # 13
           set(),        # 14
           create 123,   # 15
           weakref(&main)   # 16
           ]
end

procedure check(o1,o2)
   local cerr, herr, c1, c2, h1, h2
   c1 := Internal.compare(o1, o2)
   c2 := Internal.compare(o2, o1)
   h1 := Internal.hash(o1)
   h2 := Internal.hash(o2)
   (c2 = -c1) | (cerr := 1)
   if o1 === o2 then {
      (c1 = 0) | (cerr := 1)
      (h1 = h2) | (herr := 1)
   } else
      (c1 ~= 0) | (cerr := 1)
   write(imagex(o1),
         if o1 === o2 then " === " else " ~=== ",
         imagex(o2),         
         " cmp(o1,o2)=",
         Internal.compare(o1, o2),
         " cmp(o2,o1)=",
         Internal.compare(o2, o1),
         if /herr then " HASH OK" else " HASH ERR",
         if /cerr then " CMP OK" else " CMP ERR")
end

procedure main()
   local l, p, x
   p := Prog.load("compare") | stop(&why)
   l := Prog.get_global("f",p)() | stop("Couldn't get list")
   check(l[1], [1,2,3])
   check(l[2],r)
   check(r, r)
   check(l[3],x := r(5,6,7,8))
   check(x, x)
   check(l[4],A)
   check(A, A)
   check(l[5],x := A())
   check(x, x)
   check(l[6], fun)
   check(l[7], A.fun)
   check(l[8], fun2)
   check(l[9], x.fun2)
   check(fun, A.fun)
   check(l[10], A.fun3)
   check(l[11], repl("a",10))
   check(l[12], repl(u"a",10))
   check(l[13], table())
   check(l[14], set())   
   check(l[15], create 123)
   check(l[16], weakref(&main))
   check("a", "b")
   check(u"a", u"b")
   x := table()
   check(x, x)
   x := set()
   check(x, x)
   x := []
   check(x, x)
   x := create 123
   check(x, x)
   x := weakref(&main)
   check(x, x)
end
