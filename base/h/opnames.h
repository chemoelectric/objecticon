#define INVALID "invalid"
static char *op_names[] = {
    /*   0 */         INVALID,                                    
    /*   1 */         "asgn",
    /*   2 */         "bang",
    /*   3 */         "cat",
    /*   4 */         "compl",
    /*   5 */         "diff",
    /*   6 */         "div",
    /*   7 */         "eqv",
    /*   8 */         "inter",
    /*   9 */         "lconcat",
    /*  10 */         "lexeq",
    /*  11 */         "lexge",
    /*  12 */         "lexgt",
    /*  13 */         "lexle",
    /*  14 */         "lexlt",
    /*  15 */         "lexne",
    /*  16 */         "minus",
    /*  17 */         "mod",
    /*  18 */         "mult",
    /*  19 */         "neg",
    /*  20 */         "neqv",
    /*  21 */         "nonnull",
    /*  22 */         "null",
    /*  23 */         "number",
    /*  24 */         "numeq",
    /*  25 */         "numge",
    /*  26 */         "numgt",
    /*  27 */         "numle",
    /*  28 */         "numlt",
    /*  29 */         "numne",
    /*  30 */         "plus",
    /*  31 */         "power",
    /*  32 */         "random",
    /*  33 */         "rasgn",
    /*  34 */         "refresh",
    /*  35 */         "rswap",
    /*  36 */         "sect",
    /*  37 */         "size",
    /*  38 */         "subsc",
    /*  39 */         "swap",
    /*  40 */         "tabmat",
    /*  41 */         "toby",
    /*  42 */         "union",
    /*  43 */         "value",
    /*  44 */         "activate",
    /*  45 */         INVALID,
    /*  46 */         "coret",
    /*  47 */         "create",
    /*  48 */         "field",
    /*  49 */         "goto",
    /*  50 */         "int",
    /*  51 */         "keywd",
    /*  52 */         "limit",
    /*  53 */         "mark",
    /*  54 */         "unmark",
    /*  55 */         "cofail",
    /*  56 */         "static",
    /*  57 */         "global",
    /*  58 */         "apply",
    /*  59 */         "applyf",
    /*  60 */         "invoke",
    /*  61 */         "invokef",
    /*  62 */         "igoto",
    /*  63 */         "enterinit",
    /*  64 */         "fail",
    /*  65 */         "nil",
    /*  66 */         "const",
    /*  67 */         "framevar",
    /*  68 */         "tmp",
#if RealInDesc
    /*  69 */         "real",
#else
    /*  69 */         INVALID,
#endif
    /*  70 */         "move",
    /*  71 */         "movelabel",
    /*  72 */         "deref",
    /*  73 */         "keyop",
    /*  74 */         "keyclo",
    /*  75 */         "resume",
    /*  76 */         "knull",
    /*  77 */         "scanswap",
    /*  78 */         "scansave",
    /*  79 */         "scanrestore",
    /*  80 */         "syserr",
    /*  81 */         "custom",
    /*  82 */         "halt",
    /*  83 */         "makelist",
    /*  84 */         "pop",
    /*  85 */         "poprepeat",
    /*  86 */         INVALID,
    /*  87 */         "suspend",
    /*  88 */         "return",
    /*  89 */         "exit",
    /*  90 */         "endproc",
    /*  91 */         "csuspend",
    /*  92 */         "creturn",                                    
    /*  93 */         "cfail",                                    
    /*  94 */         "tcaseinit",
    /*  95 */         "tcaseinsert",                                    
    /*  96 */         "tcasechoose",                                    
    /*  97 */         INVALID,                                    
    /*  98 */         "globalval",
    /*  99 */         "self",
    /* 100 */         "kyes",
    /* 101 */         "asgn1",
    /* 102 */         "swap1",
    /* 103 */         INVALID,
    /* 104 */         INVALID,
    /* 105 */         INVALID,
    /* 106 */         INVALID,
    /* 107 */         INVALID,
    /* 108 */         INVALID,
    /* 109 */         INVALID,
    /* 110 */         INVALID,
    /* 111 */         INVALID,
    /* 112 */         INVALID,
    /* 113 */         INVALID,
    /* 114 */         INVALID,
    /* 115 */         INVALID,
    /* 116 */         INVALID,
    /* 117 */         INVALID,
    /* 118 */         INVALID,
    /* 119 */         INVALID,
};
