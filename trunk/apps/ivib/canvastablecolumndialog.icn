#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui


############################################################################
#
#
#
class CanvasTableColumnDialog(CanvasComponentDialog)
   public 
      paint_field,
      size,    
      internal_alignment,
      auto_width_cb

   public validate_input()
      cast(self,CanvasComponentDialog).validate_input() | fail 
      \self.paint_field.get_contents() | return alert_error(self, "Label cannot be null")
      self.paint_field.validate_input() | fail
      return
   end

   public set_vals()
      cast(self,CanvasComponentDialog).set_vals()
      c.set_paint(paint_field.get_contents())
      if auto_width_cb.is_checked() then {
         c.set_column_width(&null)
      } else {
         c.set_column_width(integer(self.size.get_contents()))
      }
      c.set_column_align(internal_alignment.object_get_selection())
   end

   public on_auto_width_cb()
      size.toggle_is_shaded()
   end

   public setup() 
      local p, l
      cast(self,CanvasComponentDialog).setup()

      p := TabItem()
      p.set_layout(GridLayout("extra=borders"))
      p.set_label("General")
      add_tab_at_front(p)

      paint_field := PaintField("title=",Label("label=Label"), "c:eol", "c:w=3")
      paint_field.set_contents(c.paint)
      p.add(paint_field)

      l := Label()
      l.set_label("Width : ")
      p.add(l)
      
      size := TextField()
      size.set_size(50)
      p.add(size)

      auto_width_cb := CheckBox("c:eol")
      auto_width_cb.set_label("Auto")
      auto_width_cb.connect(self.on_auto_width_cb, Event.ACTION)
      p.add(auto_width_cb)

      if /c.column_width then {
         size.set_is_shaded("t")
         auto_width_cb.set_is_checked("t")
      } else {
         size.set_is_shaded("f")
         size.set_contents(c.column_width)
         auto_width_cb.set_is_checked("f")
      }

      l := Label()
      l.set_label("Align : ")
      p.add(l)

      internal_alignment := List("c:eol", "c:w=2")
      internal_alignment.set_size(50)
      internal_alignment.set_selection_list(["c", "l", "r"])
      internal_alignment.object_set_selection(c.column_align)
      p.add(internal_alignment)
   end    
end


