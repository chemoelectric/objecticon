############################################################################
#
#	File:     readcpt.icn
#
#	Subject:  Procedure to read produce "carpet" from file
#
#	Author:   Ralph E. Griswold
#
#	Date:     August 7, 1997
#
############################################################################
#
#   This file is in the public domain.
#
############################################################################
#
#  This procedure reads a "carpet" file and returns a corresponding matrix.
#
############################################################################
#
#  Links:  matrix
#
############################################################################
#
#  See also:  writecpt.icn 
#
############################################################################

package ipl.readcpt

import
   io(read),
   ipl.matrix(create_matrix),
   util(error)

# convert numerical carpet to matrix
procedure read_cpt(input)	
   local carpet, width, height, i, j, line

   read(input) ? {
      ="width=" &
      width := integer(tab(many(&digits))) &
      =" height=" &
      height := integer(tab(many(&digits)))
      } | return error("*** invalid carpet file")

   carpet := create_matrix(height, width)

   every j := 1 to height do {
      line := read(input) | return error("*** short carpet data")
      i := 0
      line ? {
         while carpet[j, i +:= 1] := tab(upto(' ')) do
            move(1) | return error("*** narrow carpet data")
         }
      }

   return carpet

end
