#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package gui

import graphics

class SpinTextField(TextField)
   public keeps(e)
      return member(Key.CURSOR, e.code)
   end

   public on_key(e)
      case e.code of {
         Key.UP : parent.go_up(e)
         Key.DOWN : parent.go_down(e)
      }
   end

   public new()
      cast(self,TextField).new()
      self.connect(self.on_key, Event.KEY_PRESS)
      self.set_border(EmptyBorder().set_l_inset(Gui.TEXT_INSET).set_r_inset(0))
      return
   end
end


#
# This class is the base class for editable spin components which use a
# TextField to display/edit the current value.
#
class EditSpin(Spin)
   public 
      old_contents

   public on_textfield(ev, src, type)
      # Fire the event with self as source.
      fire(type, ev)
   end

   #
   # Set the text field's filter (see {TextField} for details).
   # @param c  The filter
   #
   public set_filter(c)
      self.view.set_filter(c)
      return self
   end

   #
   # Return the contents of the text field (which may have
   # been edited).
   #
   public get_contents()
      return view.get_contents()
   end

   public start_change(e)
      self.old_contents := get_contents()
   end

   public end_change(e)
      if self.old_contents ~=== get_contents() then
         fire(Event.CONTENT_CHANGED, e)
   end

   public create_view()
      return SpinTextField()
   end

   public new()
      cast(self,Spin).new()
      every view.connect(self.on_textfield, Event.CONTENT_CHANGED | Event.ACTION)
      return
   end
end
