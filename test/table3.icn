import io, lang, tables, ipl.random

procedure test_ord(t1,t2)
   local i, l, e
   write(">>>test_ord()")
   l := []
   every i := 1 to 50 do {
      every put(l, [i, i]|[table(i),i]|[[i], i]|[set(i), i])
   }
   shuffle(l)
   every e := !l do
      t1.insert(e[1], e[2])

   shuffle(l)
   every e := !l do
      t2.insert(e[1], e[2])

   yes_no{"equals(t1,t2)", equals(t1,t2)}
   yes_no{"t1.size() = t2.size()", t1.size()=t2.size()}
   yes_no{"hash(t1) = hash(t2)", hash(t1)=hash(t2)}
   yes_no{"equals(t1,clone(t1))", equals(t1,clone(t1))}
   yes_no{"equals(t2,clone(t2))", equals(t2,clone(t2))}

   shuffle(l)
   every t1.delete((!l)[1])
   every t2.delete((!l)[1])

   yes_no{"t1.size()=0", t1.size()=0}
   yes_no{"t2.size()=0", t2.size()=0}
end

procedure test_cl()
   local t1, t2, s, l
   write(">>>test_cl()")
   l := ["Abc","DEf","GHI","Jkl"]
   t1 := ClTable(0)
   every s := !l | map(!l) | map(!l,&lcase,&ucase) do
      t1.add(s) +:= 1
   every s := !l do {
      print{"get("||imagex(s)||")", t1.get(s)}
   }
   t2 := ClTable(0)
   every t2.insert(!l, 3)
   yes_no{"equals(t1,t2)", equals(t1,t2)}
   yes_no{"t1.size() = t2.size()", t1.size()=t2.size()}
   yes_no{"hash(t1) = hash(t2)", hash(t1)=hash(t2)}
   yes_no{"equals(t1,clone(t1))", equals(t1,clone(t1))}
   yes_no{"equals(t2,clone(t2))", equals(t2,clone(t2))}
   every t1.delete(!l)
   every t2.delete(map(!l))
   yes_no{"t1.size()=0", t1.size()=0}
   yes_no{"t2.size()=0", t2.size()=0}
end

procedure test_eq()
   local t1, e, l
   write(">>>test_eq()")
   l := [ [], 0, &null, 100, table(100), [1,2,3], table(0,1,2,3,4), 
         [ [1,2], [3,4] ], set(1,2,3), ClTable("abc","dog",100,"cat",200)]
   t1 := EqTable(0)
   every e := !l | !clone(l) do {
      t1.add(e) +:= 1
   }
   every e := !l do {
      print{"get("||imagex(e)||")", t1.get(e)}
   }
   yes_no{"equals(t1,clone(t1))", equals(t1,clone(t1))}
   every t1.delete(!l)
   yes_no{"t1.size()=0", t1.size()=0}
end

procedure main()
   test_ord(EqTable(0),EqTable(0))
   test_ord(SortTable(0),SortTable(0))
   test_cl()
   test_eq()
end
