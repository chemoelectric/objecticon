# $Id$

import gui, io, util

class BorderField(Component)
   public 
   borders,
   border_tbl,
   edit_border_button

   public get_contents()
      local b, i

      i := borders.get_selection()
      if i = 1 then
         return &null
      b := border_tbl[i] 
      if /b then {
         b := case i of {
            2 : CanvasEmptyBorder()
            3 : CanvasRaisedBorder()
            4 : CanvasSunkenBorder()
            5 : CanvasBevelledBorder()
            6 : CanvasPlainBorder()
            7 : CanvasNullBorder()
            default: stop()
         }
         b.change_canvas(parent_dialog.c.parent_Canvas)
         b.rename()
         insert(border_tbl, i, b)
      }
      return b
   end

   public on_edit_border()
      get_contents().dialog().show_modal(parent_dialog)
   end

   public on_border_change()
      edit_border_button.set_is_shaded(Yes{ borders.get_selection() = 1 })
   end

   public set_contents(c)
      border_tbl := table()
      if /c then
         edit_border_button.set_is_shaded(&yes)
      else {
         borders.set_selection(case classof(c) of {
            CanvasEmptyBorder : 2
            CanvasRaisedBorder : 3
            CanvasSunkenBorder : 4
            CanvasBevelledBorder : 5
            CanvasPlainBorder : 6
            CanvasNullBorder : 7
            default : stop("Unknown border type")
         })
         border_tbl[borders.get_selection()] := c
      }
      return self
   end

   public setup()
      self.set_layout(GridLayout().set_doi(0))
      borders :=  List().set_selection_list(
                       ["Default",
                        "EmptyBorder",
                        "RaisedBorder",
                        "SunkenBorder",
                        "BevelledBorder",
                        "PlainBorder",
                        "NullBorder"])
      borders.connect(self.on_border_change, Event.SELECTION_CHANGED)
      self.add(borders)
      edit_border_button := TextButton().set_label("Edit...").set_constraint("x_align", "l").set_constraint("eol", &yes)
      edit_border_button.connect(self.on_edit_border, Event.ACTION)
      self.add(edit_border_button)
   end

   public override new()
      Component.new()
      setup()
      self.set_constraint("x_fill", &yes)
      self.set_constraint("x_weight", 1.0)
      return
   end
end


