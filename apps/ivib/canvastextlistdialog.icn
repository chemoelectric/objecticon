#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui


############################################################################
#
#
#
class CanvasTextListDialog(CanvasComponentDialog)
   public 
      contents,
      ucs_cb,
      select_group

   public override set_vals()
      CanvasComponentDialog.set_vals()
      c.set_contents(trim_trailing_empty(contents.get_contents()))
      c.set_select_mode(select_group.get_select_mode())
      c.invalidate_line_height()
   end

   private on_ucs_cb()
      local t
      t := if ucs_cb.is_checked() then "ucs" else "string"
      contents.set_contents(convert_text_list(contents.get_contents(), t))
   end

   public override setup()
      local p

      CanvasComponentDialog.setup()

      p := TabItem()
      p.set_layout(GridLayout())
      add_tab_at_front(p)
      p.set_label("Contents")
      contents := EditableTextList().set_constraint("eol", &yes)
      contents.set_size(scale(200), scale(200))
      contents.set_contents(copy(c.get_contents()))
      p.add(contents)

      ucs_cb := CheckBox().set_label("Ucs content")
      if type(c.contents[1]) == "ucs" then
         ucs_cb.set_is_checked(&yes)
      ucs_cb.connect(self.on_ucs_cb, Event.ACTION)
      p.add(ucs_cb)

      p := TabItem()
      p.set_layout(GridLayout().set_extra("borders"))
      add_tab(p)
      p.set_label("Selection")

      p.add(Label().set_label("Selection:"))
      select_group := SelectModeList()
      p.add(select_group)
      select_group.set_select_mode(c.select_mode)
   end
end

