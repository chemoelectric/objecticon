#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui


############################################################################
#
# Class for representing a MenuButton on the canvas.
#
class CanvasMenuButton(CanvasComponent,MenuButton)
   public 
      string_rep

   #
   # Generate code into Code object c.
   #
   public gen_code(c)
      self.menu.gen_code(c)
      cast(self,CanvasComponent).gen_code(c)
      c.chain("set_menu(" || self.menu.name || ")")
   end

   #
   # Duplicate object.
   #
   public dup()
      local c
      c := CanvasMenuButton()
      cast(self,CanvasComponent).dup_fields(c)
      c.set_menu(self.menu.dup())
      return c
   end

   #
   # Return the I/O template.
   #
   public static get_template()
      suspend CanvasComponent.get_template() | ["Menu", "menu"]
   end

   protected post_decode()
      cast(self,CanvasComponent).post_decode()
      self.menu.component_link := self
   end

   public set_string_rep()
      string_rep := []
      self.menu.set_string_rep(string_rep, 1, self, 1)
      put(string_rep, MenuTreeNode(1, self, 2))
   end

   public get_string_rep()
      return self.string_rep      
   end

   #
   # Open the configuration dialog box.
   #
   public dialog()
      return CanvasMenuBarDialog(self)
   end

   public allows_null_width()
      return 1
   end

   public allows_null_height()
      return 1
   end

   public gen_cos()
      suspend cast(self,CanvasComponent).gen_cos() | self.menu
   end

   public new()
      cast(self,MenuButton).new()
      cast(self,CanvasComponent).new()
      self.class_name := "MenuButton"
      self.import_name := "gui"
      self.name := "menu_button"
      return
   end
end

