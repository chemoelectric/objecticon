#SRC: JCON

import io,lang

record simple(f)
record rec(f1, f2)

procedure main()
   local a, b
   local rec1,rec2,rec3,rec4, rec5,rec6,rec7,rec8
   local i1,i2,i3,i4

   a := rec()
   a.f1 := 1
   a.f2 := 2
   write(a.f1, " ", a.f2)
   a := rec(3)
   a.f2 := 4
   write(a.f1, " ", a.f2)
   a := rec(5,6)
   write(a.f1, " ", a.f2)
   a.f1 := 7
   a.f2 := 8
   write(a.f1, " ", a.f2)
   a := rec(9,10,11)
   write(a.f1, " ", a.f2)
   a := rec(11, 12)
   every write(!a)
   every !a := 13
   write(a.f2)

   b := simple(14)
   write(?b)
   ?b := 15
   write(!b)

   b := rec(3, 7)
   every write(b[1 to 3])
   every write(b["f" || (1 to 3)])

   a := rec(1, 2)
   b := rec(3, 4)
   a.f1 +:= 10
   a.f2 +:= 20
   every !b +:= 70
   every writes(" ", !a | !b | "\n")

   rec1 := Constructor.create_constructor("rec1","a","b","c")
   rec2 := Constructor.create_constructor("rec2","a","b","c")
   rec3 := Constructor.create_constructor("rec2","a","b","c")
   rec4 := Constructor.create_constructor("rec2","x","y","z")
   rec5 := Constructor.create_constructor("small")
   rec6 := Constructor.create_constructor("small")
   rec7 := Constructor.create_constructor("big", "x","y","z","a","b","c")
   rec8 := Constructor.create_constructor("big", "x","y","z","a","b","c")
   yes_no{"rec1===rec2",rec1===rec2}
   yes_no{"rec2===rec3",rec2===rec3}
   yes_no{"rec3===rec4",rec3===rec4}
   yes_no{"rec5===rec6",rec5===rec6}
   yes_no{"rec7===rec8",rec7===rec8}

   i1 := rec1(1,2,3)
   i2 := rec2(1,2,3)
   i3 := rec3(1,2,3)
   i4 := rec4(1,2,3)
   yes_no{"constructorof(i1)===rec1", Constructor.get_constructor(i1)===rec1}
   yes_no{"constructorof(i2)===rec2", Constructor.get_constructor(i2)===rec2}
   yes_no{"constructorof(i3)===rec3", Constructor.get_constructor(i3)===rec3}
   yes_no{"constructorof(i4)===rec4", Constructor.get_constructor(i4)===rec4}

end
