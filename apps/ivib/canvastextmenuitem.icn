#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import gui, lang

############################################################################
#
#
#
class CanvasTextMenuItem(CanvasMenuComponent,TextMenuItem)
   #
   # Generate code into Code object c.
   #
   public override gen_code(c)
      self.paint_mid.gen_code(c)
      (\self.paint_left).gen_code(c)
      (\self.paint_right).gen_code(c)
      CanvasMenuComponent.gen_code(c)
      c.chain("set_paint_mid(" || self.paint_mid.name || ")")
      if \self.paint_left then
         c.chain("set_paint_left(" || self.paint_left.name || ")")
      if \self.paint_right then
         c.chain("set_paint_right(" || self.paint_right.name || ")")
   end

   public override dup_fields(c)
      CanvasMenuComponent.dup_fields(c)
      c.set_paint_mid(self.paint_mid.dup())
      c.set_paint_left(if \paint_left then paint_left.dup() else &null)
      c.set_paint_right(if \paint_right then paint_right.dup() else &null)
   end

   #
   # Duplicate object.
   #
   public override dup()
      local c
      c := CanvasTextMenuItem()
      self.dup_fields(c)
      return c
   end

   #
   # Get a label for the menu bar display.
   #
   public get_string_label()
      if is(self.paint_mid, CanvasTextPaint) then
         return self.paint_mid.str || "(Txt)"
      else
         return Class.get_name(self.paint_mid) || "(Txt)"
   end

   public override get_template()
      suspend CanvasMenuComponent.get_template() |
         ["Paint mid", "paint_mid"] |
         ["Paint left", "paint_left"] |
         ["Paint right", "paint_right"]
   end

   public override gen_cos()
      suspend CanvasMenuComponent.gen_cos() | self.paint_mid | \self.paint_left | \self.paint_right
   end

   public override new()
      TextMenuItem.new()
      CanvasMenuComponent.new()
      self.class_name := "TextMenuItem"
      self.import_name := "gui"
      self.name := "text_menu_item"
      return
   end
end

