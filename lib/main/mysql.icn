#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

$define LIB "objecticonmysqllib.so"

package mysql

import lang, util(to_flag)

#
# This class provides a wrapper around the MySql C API.  Nearly all the
# methods have a single underlying corresponding C function - see the MySql
# documentation for details on what the underlying function does.
#
class MySql()
   public static const 
      FIELD_TYPE_DECIMAL,
      FIELD_TYPE_TINY,
      FIELD_TYPE_SHORT,
      FIELD_TYPE_LONG,
      FIELD_TYPE_FLOAT,
      FIELD_TYPE_DOUBLE,
      FIELD_TYPE_NULL,
      FIELD_TYPE_TIMESTAMP,
      FIELD_TYPE_LONGLONG,
      FIELD_TYPE_INT24,
      FIELD_TYPE_DATE,
      FIELD_TYPE_TIME,
      FIELD_TYPE_DATETIME,
      FIELD_TYPE_YEAR,
      FIELD_TYPE_NEWDATE,
      FIELD_TYPE_ENUM,
      FIELD_TYPE_SET,
      FIELD_TYPE_TINY_BLOB,
      FIELD_TYPE_MEDIUM_BLOB,
      FIELD_TYPE_LONG_BLOB,
      FIELD_TYPE_BLOB,
      FIELD_TYPE_VAR_STRING,
      FIELD_TYPE_STRING,
      FIELD_TYPE_GEOMETRY,
      MYSQL_OPT_CONNECT_TIMEOUT,
      MYSQL_OPT_COMPRESS,
      MYSQL_OPT_NAMED_PIPE,
      MYSQL_INIT_COMMAND,
      MYSQL_READ_DEFAULT_FILE,
      MYSQL_READ_DEFAULT_GROUP,
      MYSQL_SET_CHARSET_DIR,
      MYSQL_SET_CHARSET_NAME,
      MYSQL_OPT_LOCAL_INFILE,
      MYSQL_OPTION_MULTI_STATEMENTS_ON,
      MYSQL_OPTION_MULTI_STATEMENTS_OFF,
      CLIENT_LONG_PASSWORD,
      CLIENT_FOUND_ROWS,
      CLIENT_LONG_FLAG,
      CLIENT_CONNECT_WITH_DB,
      CLIENT_NO_SCHEMA,
      CLIENT_COMPRESS,
      CLIENT_ODBC,
      CLIENT_LOCAL_FILES,
      CLIENT_IGNORE_SPACE,
      CLIENT_PROTOCOL_41,
      CLIENT_INTERACTIVE,
      CLIENT_SSL,
      CLIENT_IGNORE_SIGPIPE,
      CLIENT_TRANSACTIONS,
      CLIENT_RESERVED,
      CLIENT_SECURE_CONNECTION,
      CLIENT_MULTI_STATEMENTS,
      CLIENT_MULTI_RESULTS,
      CLIENT_REMEMBER_OPTIONS

   private 
      ptr
   
   #
   # Invoke mysql_affected_rows() for the current connection.
   #
   public defer get_affected_rows()

   #
   # Invoke mysql_change_user() for the current connection.
   #
   public defer change_user(user, password, db)

   #
   # Invoke mysql_get_character_set_name() for the current connection.
   #
   public defer get_character_set_name()

   #
   # Invoke mysql_close() for the current connection.
   #
   public defer close()

   #
   # Invoke mysql_set_server_option() for the current connection.
   #
   public defer set_server_option(option)

   #
   # Invoke mysql_sqlstate() for the current connection.
   #
   public defer get_sqlstate()

   #
   # Invoke mysql_ssl_set() for the current connection.
   #
   public defer ssl_set(key, cert, ca, capath, cipher)

   #
   # Invoke mysql_dump_debug_info() for the current connection.
   #
   public defer dump_debug_info()

   #
   # Invoke mysql_errno() for the current connection.
   #
   public defer get_errno()

   #
   # Invoke mysql_error() for the current connection.
   #
   public defer get_error()

   #
   # Invoke mysql_field_count() for the current connection.
   #
   public defer get_field_count()

   #
   # Invoke mysql_get_client_info() for the current connection.
   #
   public static defer get_client_info()

   #
   # Invoke mysql_get_client_version() for the current connection.
   #
   public static defer get_client_version()

   #
   # Invoke mysql_get_host_info() for the current connection.
   #
   public defer get_host_info()

   #
   # Invoke mysql_get_proto_info() for the current connection.
   #
   public defer get_proto_info()

   #
   # Invoke mysql_get_server_info() for the current connection.
   #
   public defer get_server_info()

   #
   # Invoke mysql_get_server_version() for the current connection.
   #
   public defer get_server_version()

   #
   # Invoke mysql_info() for the current connection.
   #
   public defer get_info()

   #
   # Invoke mysql_insert_id() for the current connection.
   #
   public defer get_insert_id()

   #
   # Invoke mysql_kill() for the current connection.
   #
   public defer kill(pid)

   #
   # Invoke mysql_list_dbs() for the current connection.
   #
   # @return an {MySqlRes} instance
   #
   public list_dbs(wild)
      return MySqlRes(list_dbs_impl(wild))
   end

   private defer list_dbs_impl(wild)

   #
   # Invoke mysql_list_fields() for the current connection.
   #
   # @return an {MySqlRes} instance
   #
   public list_fields(table, wild)
      return MySqlRes(list_fields_impl(table, wild))
   end

   private defer list_fields_impl(table, wild)

   #
   # Invoke mysql_list_processes() for the current connection.
   #
   # @return an {MySqlRes} instance
   #
   public list_processes()
      return MySqlRes(list_processes_impl())
   end

   private defer list_processes_impl()

   #
   # Invoke mysql_list_tables() for the current connection.
   #
   # @return an {MySqlRes} instance
   #
   public list_tables(wild)
      return MySqlRes(list_tables_impl(wild))
   end

   private defer list_tables_impl(wild)

   #
   # Invoke mysql_options() for the current connection.
   #
   public defer options(option, arg)

   #
   # Invoke mysql_ping() for the current connection.
   #
   public defer ping()

   #
   # Invoke mysql_query() for the current connection.
   #
   public defer query(q)

   #
   # Invoke mysql_connect() for the current connection.
   #
   public defer connect(host, user, passwd, db, port, unix_socket, client_flag)

   #
   # Invoke mysql_real_escape_string() for the current connection.  This
   # should be used to escape any strings used to create SQL.
   #
   public defer esc(s)

   #
   # Convenience method to escape a string and place single quotes 
   # around it
   #
   public esc_str(s)
      if /s then
         return "NULL"
      else
         return "\'" || esc(s) || "\'"
   end

   #
   # Convenience method to convert a {Time} instance to a string
   # for inclusion in an SQL statement as a DATETIME.
   #
   public esc_datetime(d)
      if /d then
         return "NULL"
      else
         return "\'" || d.format("yyyy-MM-dd HH:mm:ss") || "\'"
   end

   #
   # Convenience method to convert a {Time} instance to a string
   # for inclusion in an SQL statement as a DATE.
   #
   public esc_date(d)
      if /d then
         return "NULL"
      else
         return "\'" || d.format("yyyy-MM-dd") || "\'"
   end

   #
   # Convenience method to convert a {Time} instance to a string
   # for inclusion in an SQL statement as a TIME.
   #
   public esc_time(d)
      if /d then
         return "NULL"
      else
         return "\'" || d.format("HH:mm:ss") || "\'"
   end

   #
   # Invoke mysql_stat() for the current connection.
   #
   public defer get_stat()

   #
   # Invoke mysql_store_result() for the current connection.
   #
   # @return an {MySqlRes} instance
   #
   public store_result()
      return MySqlRes(store_result_impl())
   end

   private defer store_result_impl()

   #
   # Invoke mysql_thread_id() for the current connection.
   #
   public defer get_thread_id()

   #
   # Invoke mysql_use_result() for the current connection.
   #
   # @return an {MySqlRes} instance
   #
   public use_result()
      return MySqlRes(use_result_impl())
   end

   private defer use_result_impl()

   #
   # Invoke mysql_warning_count() for the current connection.
   #
   public defer get_warning_count()

   #
   # Invoke mysql_commit() for the current connection.
   #
   public defer commit()

   #
   # Invoke mysql_rollback() for the current connection.
   #
   public defer rollback()

   #
   # Turn autocommit on or off
   # 
   public set_autocommit(s)
      return set_autocommit_impl(if \to_flag(s) then 1 else 0)
   end

   private defer set_autocommit_impl(s)

   #
   # Invoke mysql_more_results() for the current connection.
   #
   public defer more_results()

   #
   # Invoke mysql_next_result() for the current connection.
   #
   public defer next_result()

   #
   # Invoke mysql_select_db() for the current connection.
   #
   public defer select_db(db)

   #
   # Invoke mysql_shutdown() for the current connection.
   #
   public defer shutdown()

   private static defer new_impl()

   private static init()
      FIELD_TYPE_DECIMAL := 0
      FIELD_TYPE_TINY := 1
      FIELD_TYPE_SHORT := 2
      FIELD_TYPE_LONG := 3
      FIELD_TYPE_FLOAT := 4
      FIELD_TYPE_DOUBLE := 5
      FIELD_TYPE_NULL := 6
      FIELD_TYPE_TIMESTAMP := 7
      FIELD_TYPE_LONGLONG := 8
      FIELD_TYPE_INT24 := 9 
      FIELD_TYPE_DATE := 10
      FIELD_TYPE_TIME := 11
      FIELD_TYPE_DATETIME := 12
      FIELD_TYPE_YEAR := 13
      FIELD_TYPE_NEWDATE := 14
      FIELD_TYPE_ENUM := 247
      FIELD_TYPE_SET := 248
      FIELD_TYPE_TINY_BLOB := 249
      FIELD_TYPE_MEDIUM_BLOB := 250
      FIELD_TYPE_LONG_BLOB := 251
      FIELD_TYPE_BLOB := 252
      FIELD_TYPE_VAR_STRING := 253
      FIELD_TYPE_STRING := 254
      FIELD_TYPE_GEOMETRY := 255
      MYSQL_OPT_CONNECT_TIMEOUT := 0
      MYSQL_OPT_COMPRESS := 1
      MYSQL_OPT_NAMED_PIPE := 2
      MYSQL_INIT_COMMAND := 3
      MYSQL_READ_DEFAULT_FILE := 4
      MYSQL_READ_DEFAULT_GROUP := 5
      MYSQL_SET_CHARSET_DIR := 6
      MYSQL_SET_CHARSET_NAME := 7 
      MYSQL_OPT_LOCAL_INFILE := 8
      MYSQL_OPTION_MULTI_STATEMENTS_ON := 0
      MYSQL_OPTION_MULTI_STATEMENTS_OFF := 1
      CLIENT_LONG_PASSWORD :=    1       
      CLIENT_FOUND_ROWS :=       2       
      CLIENT_LONG_FLAG :=        4       
      CLIENT_CONNECT_WITH_DB :=  8       
      CLIENT_NO_SCHEMA :=        16      
      CLIENT_COMPRESS :=         32      
      CLIENT_ODBC :=             64      
      CLIENT_LOCAL_FILES :=      128     
      CLIENT_IGNORE_SPACE :=     256     
      CLIENT_PROTOCOL_41 :=      512     
      CLIENT_INTERACTIVE :=      1024    
      CLIENT_SSL :=              2048    
      CLIENT_IGNORE_SIGPIPE :=   4096    
      CLIENT_TRANSACTIONS :=     8192    
      CLIENT_RESERVED :=         16384   
      CLIENT_SECURE_CONNECTION := 32768  
      CLIENT_MULTI_STATEMENTS := 65536   
      CLIENT_MULTI_RESULTS :=    131072  
      CLIENT_REMEMBER_OPTIONS := 2147483648  # ((ulong) (1L << 31))

      Class.load_library(LIB)
   end

   public new()
      ptr := new_impl() | fail
      return
   end
end

