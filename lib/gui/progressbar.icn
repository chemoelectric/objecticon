#
# $Id$
#

package gui



#
# A progress bar
#
class ProgressBar(Component)
   public 
   p

   public get_default_height()
      return WAttrib(self.cbwin, "fheight") + border.get_total_height()
   end

   public display()
      local cw, s, r
      border.draw_rect(self.cbwin, self)
      r := border.get_inner_rect(self)
      s := p || "%"
      DrawStringEx(self.cbwin,
                   r.x + (r.w - TextWidth(self.cbwin, s)) / 2,
                   r.y + (r.h - WAttrib(self.cbwin, "fheight")) / 2,
                   s)
      #
      # Draw the bar in reverse mode
      #
      cw := Clone(self.cbwin, "drawop=reverse")
      FillRectangle(cw, r.x, r.y, r.w * p / 100.0, r.h)
      Uncouple(cw)
   end

   #
   # Get the current percentage.
   #
   public get_percentage()
      return p
   end

   #
   # Set the percentage.
   #
   public set_percentage(p)
      p <:= 0
      p >:= 100
      self.p := p
      self.invalidate()
   end

   public set_one(f)
      case f.attr of {
         "percentage" : set_percentage(f.int_val())
         default: return cast(self,Component).set_one(f)
      }
      return
   end

   public new(a[])
      cast(self,Component).new()
      self.set_border(CompoundBorder("outer=",RaisedBorder(),
                                     "inner=",EmptyBorder()))
      self.set_percentage(0)
      set_fields(a)
      return
   end
end

