#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

import xml, io, ipl.options

procedure main(a)
   local fmt, p, s, d, x, t, opt
   fmt := CanonicalXmlFormatter()
   p := XmlParser("preserve_insignificant_whitespace=t", "do_namespaces=f")
   opt := options(a, "-u!")

   *a > 0 | stop("usage: testcase source [output]")

   s := Files.file_to_string(a[1]) | stop("couldnt open" || a[1])
   if \opt["u"] then
      s := ucs(s) | exit(0)     # Okay if invalid utf8

   if d := p.parse(s) then {
      if d.validity_errors = 0 then {
         write("Testcase : ", a[1], " unexpectedly parsed with no validity errors")
         write(s)
         write("Failure")
         write("End===============================================================")
         exit(1)
      } else {
         if *a = 1 then {
            # Okay, parse with validity errors no further checking
            exit(0)
         }

         t := Files.file_to_string(a[2]) | stop("couldnt open" || a[2])

         x := fmt.format_to_string(d)
         if x == t then
            exit(0)

         write("Testcase : ", a[1], " parsed with validity errors, but didn't compare to out version")
         write("Parsed:")
         write(x)
         write("Test:")
         write(t)
         write("Failure")
         write("End===============================================================")
         exit(1)
      }
   } else {
      # Okay if it didn't parse
      exit(0)
   }

end


