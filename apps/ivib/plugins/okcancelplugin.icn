import ivib.plugin, lang

$load IMG "okcancel.gif"

global IC, error

invocable OkCancelPlugin

class OkCancelPlugin(Plugin)
   private static init()
      IC.name_image("okcancel", IMG)
   end

   public override get_ui_name()
      return "OkCancel"
   end

   public override init_component(obj)
      obj.class_name := "Component"
      obj.import_name := "gui"
      obj.name := "ok_cancel"
      insert(obj.config, "okay_label", "Okay")
      insert(obj.config, "cancel_label", "Cancel")
      insert(obj.config, "okay_method", "on_okay")
      insert(obj.config, "cancel_method", "dispose")
   end

   public override validate_config(obj, new_config)
      *\new_config["okay_label"] > 0 | return error("Must have an okay_label")
      *\new_config["cancel_label"] > 0 | return error("Must have an cancel_label")
      return
   end

   public override gen_code(c, obj)
      local t, h
      t := c.get_temp_var()
      c.add_import("gui", "GridLayout")
      c.add_import("gui", "TextButton")
      c.chain("set_layout(GridLayout().set_doi(0))")
      c.line(t || " := TextButton()")
      c.chain("set_label(" || image(obj.config["okay_label"]) || ")")
      if h := \obj.config["okay_method"] then {
         c.add_import("gui", "Event")
         c.chain("connect(" || h || ", Event.ACTION)")
         c.add_method(["private"], h, ["ev"])
      }
      c.line(obj.name || ".add(" || t || ")")
      c.line(t || " := TextButton()")
      c.chain("set_label(" || image(obj.config["cancel_label"]) || ")")
      if h := \obj.config["cancel_method"] then {
         c.add_import("gui", "Event")
         c.chain("connect(" || h || ", Event.ACTION)")
         c.add_method(["private"], h, ["ev"])
      }
      c.line(obj.name || ".add(" || t || ")")
   end

   public override display(obj)
      get_icon(obj).copy_to(,,,, obj.cbwin, obj.x, obj.y)
   end

   public override get_default_width(obj)
      return get_icon(obj).get_width()
   end

   public override get_default_height(obj)
      return get_icon(obj).get_height()
   end

   private get_icon(obj)
      return IC.get_with_resize("okcancel")
   end
end

procedure main(m)
   local e
   e := Class.get_program(m)
   # Use the main prog's ImageCache so images use the same display.
   IC := Prog.get_global("gui.ImageCache", e)
   # and error, so &why is set correctly
   error := Prog.get_global("util.error", e)
   return OkCancelPlugin()
end
