#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package xml

#
# A formatter for outputting HTML documents
#
class HtmlFormatter(Formatter)
   protected override format_document(n)
      local c
      every c := !n.children do {
         format_node(c)
         write()
      }
   end

   protected override format_content(s)
      writes1(s)
   end

   protected override format_doctype(n)
      local s, x
      s := "<!DOCTYPE "
      s ||:= \n.name
      x := n.external_id
      if \x then {
         if \x.public_id then {
            if \x.system_id then
               s ||:= " PUBLIC \"" || x.public_id || "\" \"" || x.system_id || "\""
            else
               s ||:= " PUBLIC \"" || x.public_id
         } else
            s ||:= " SYSTEM \"" || \x.system_id || "\""
      }
      s ||:= ">"
      writes1(s)
   end

   protected override format_comment(n)
      writes("<!--", n.comment, "-->")
   end

   protected override format_element(n)
      local s, l, e

      s := "<" || n.name

      every l := !sort(n.attributes) do {
         if \l[2] then
            s ||:= " " || l[1] || "=\"" || xml_escape(l[2], '&<>\"') || "\""
         else
            s ||:= " " || l[1]
      }

      s ||:= ">"
      writes1(s)

      every e := !n.children do {
         if text(e) then
            writes1(xml_escape(e, '&<>\"'))
         else
            format_node(e)
      }

      if not(HtmlParser.is_standalone_tag(n.name)) then
         writes("</", n.name, ">")
   end

   protected override format_pi(n) end
   protected override format_cdata(n) end
   protected override format_xmldecl(n) end

end

