#
# $Id$
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package gui

#
# This component functions in the same way as List above, but
# the item selected may be edited by the user.  An extra
# method is therefore supplied to get the content, as it may
# not correspond to an element of the list.
#
# A CONTENT_CHANGED event is generated when the value displayed in the
# field changes, either by selection from the list or user edit of the
# text.
#
class EditList(SelectionDropDown)
   #
   # Set the text field's filter (see {TextField} for details).
   # @param c  The filter
   #
   public set_filter(c)
      self.view.set_filter(c)
      return self
   end

   #
   # Return the contents of the selected item (which may have
   # been edited).
   #
   public get_contents()
      return self.view.get_contents()
   end

   #
   # Set the contents of the text to the given string; the
   # selection is set to any matching item in the list, or
   # &null if there is no match.
   #
   public set_contents(x)
      self.view.set_contents(x)
      synch_selection()
      return self
   end

   public synch_selection()
      selection := keyof(selection_list, view.get_contents())
   end

   public apply_selection(ev)
      local s 
      s := extract_selection() | ""
      if /ev then
         self.view.set_contents(s)
      else
         self.view.assign_contents(s, ev)
   end

   public on_textfield(ev, src, type)
      synch_selection()
      # Fire the event with self as source.
      fire(type, ev)
   end

   public create_view()
      return DropDownTextField()
   end

   public get_default_width()
      local t
      t := 0
      # Max string length + space for cursor (cf TextField's get_view() method)
      every t <:= self.cbwin.text_width((view.contents | !self.selection_list) || " ")
      return border.get_total_width() + b.get_preferred_width() + t + view.border.get_total_width()
   end

   public new()
      cast(self,DropDown).new()
      every view.connect(self.on_textfield, Event.CONTENT_CHANGED | Event.ACTION)
      return
   end
end
