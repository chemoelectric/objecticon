#summary Introduction

= Introduction =

Object Icon is based on the Icon programming language, more details about which can be found at [http://www.cs.arizona.edu/icon/].  It also borrows several ideas from another object-oriented Icon derivative, Unicon - see [http://unicon.sourceforge.net/], from Jcon, (see ) [http://www.cs.arizona.edu/icon/jcon/], and from Shamim Mohamed's Posix extensions - see [http://www.drones.com/unicon/].

= Downloads =
== Current version ==
[https://drive.google.com/open?id=0B0V-oOspWt47QzRuZGVOX3VqRXc&authuser=0 Current (v2.12, 2.6MB)]
== Old versions ==
[https://drive.google.com/open?id=0B0V-oOspWt47bGZWMXJuRHRiaUk&authuser=0 Directory]
== The termlinks-extras files ==
[https://drive.google.com/open?id=0B0V-oOspWt47Y0cxZHd5cDVaRFE&authuser=0 termlinks-extras.tar.gz]

= Object Icon wiki pages =

 * [Installation Installation instructions]
 * [TranslatingLinkingAndRunning Translating, linking and running programs]
 * [Ieval Interactive expression evaluator]
 * [ClassesAndObjects Classes and Objects]
   * [Fields]
   * [Inheritance]
   * [FieldModifiers Modifiers - Specifying access to fields]
   * [MethodPointers Method Pointers]
   * [SpecialMethods The new and init methods]
   * [NativeMethods Native methods]
 * [Packages Packages]
   * [LangPackage The lang package]
   * [IoPackage The io package]
   * [IpcPackage The ipc package]
   * [XmlPackage The xml package]
   * [GraphicsPackage The graphics package]
 * [Coexpressions Co-expressions]
 * [Unicode Unicode support]
 * [OrganisingSource How to organise application and library source code]
 * [DynamicLoadC Dynamically loading C/RTL code]
 * [DynamicLoadObjectIcon Dynamically loading Object Icon programs]
 * [DifferencesVersusIcon Differences between Object Icon and Icon]
 * [BuiltinFunctions List of builtin functions]
 * [Keywords List of keywords]
 * [Examples Example programs]
 * [ImplementationNotes Some brief notes about how Object Icon is implemented]
