$start ensure_class_initialized_impl
      Op_Custom c:check_if_uninitialized
         Op_Tmp tmp:0
         Exit
      Op_Custom c:set_class_state
         Op_Tmp tmp:0
         Op_Int Initializing
      Op_Move
         Op_Tmp tmp:1
         Op_Int 0
Loop: 
      Op_Custom c:for_class_supers
         Op_Tmp tmp:0
         Op_Tmp tmp:1
         Op_Tmp tmp:2
         Brk
      Op_Custom c:ensure_class_initialized
         Op_Tmp tmp:2
      Op_Goto 
         Loop
Brk:  
      Op_Mark
         mark:0
      Op_Custom c:invoke_class_init
         Op_Tmp tmp:0
         InitFail
      Op_Unmark
         mark:0
InitFail:
      Op_Custom c:set_class_state
         Op_Tmp tmp:0
         Op_Int Initialized
Exit: 
      Op_Fail
$end

$start construct_object_impl
    Op_Custom c:ensure_class_initialized
       Op_Tmp tmp:0
    # Resume closure 0, which has been setup to call the new method and
    # goto NewFail on failure (see construct_object() in invoke.r)
    Op_Resume
       clo:0
    # If the closure left any frames on the stack, Op_Return below will tidy
    # them up.
    Op_Custom c:set_object_state
       Op_Tmp tmp:1
       Op_Int Initialized
    Op_Return
       Op_Tmp tmp:1
NewFail:
    # In case a reference to the object escaped from the constructor, set
    # its state to Initialized.
    Op_Custom c:set_object_state
       Op_Tmp tmp:1
       Op_Int Initialized
    Op_Fail
$export NewFail
$end

#
# Construct object closure for class with no "new" function
#
$start construct_object0_impl
    Op_Custom c:ensure_class_initialized
       Op_Tmp tmp:0
    Op_Custom c:set_object_state
       Op_Tmp tmp:1
       Op_Int Initialized
    Op_Return
       Op_Tmp tmp:1
$end

$start generate_arg
    Op_Return
       Op_Tmp tmp:0
$end

#
# This frame simply initializes the given class, then pops itself and repeats
# the last instruction in the calling frame.
#
$start initialize_class_and_repeat
    Op_Custom c:ensure_class_initialized
       Op_Tmp tmp:0
    Op_PopRepeat
$end

$start get_impl
    Op_Custom c:simple_access
         Op_Tmp tmp:2
         Op_Tmp tmp:0
         Op_Tmp tmp:1
         0             # Nil failure label
    Op_CReturn
         Op_Tmp tmp:2
$end

$start getf_impl
    Op_Custom c:simple_access
         Op_Tmp tmp:2
         Op_Tmp tmp:0
         Op_Tmp tmp:1
         FailAccess
    Op_CReturn
         Op_Tmp tmp:2

FailAccess:
    Op_Custom c:handle_access_failure
    Op_CFail
$end

$start getq_impl
    Op_Custom c:simple_access
         Op_Tmp tmp:2
         Op_Tmp tmp:0
         Op_Tmp tmp:1
         FailAccess
    Op_CReturn
         Op_Tmp tmp:2

FailAccess:
    Op_CFail
$end

$start lang_Class_ensure_initialized_impl
    Op_Custom c:ensure_class_initialized
         Op_Tmp tmp:0
    Op_CReturn
         Op_Knull
$end

$start lang_Class_create_raw_instance_of_impl
    Op_Custom c:ensure_class_initialized
         Op_Tmp tmp:0
    Op_Custom c:create_raw_instance
         Op_Tmp tmp:1
         Op_Tmp tmp:0
    Op_CReturn
         Op_Tmp tmp:1
$end

$start apply_impl
    Op_Apply
         clo:0
         Op_Tmp tmp:2
         Op_Tmp tmp:0
         Op_Tmp tmp:1
         0
         Done
Loop:
    Op_CSuspend
         Op_Tmp tmp:2
    Op_Resume
         clo:0
    Op_Goto 
         Loop
Done:
     Op_CFail
$end
