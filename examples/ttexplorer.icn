import gui, io, ipl.sort, util, graphics, ipl.filegui

class TTExplorer(Dialog)
   public
      bits_col,
      date_col,
      file_col,
      size_col,
      tt,
      tree

   #
   # Given a Node n, get the full file path it represents by traversing
   # up the tree structure to the root.
   #
   public get_full_path(n)
      local l
      l := []
      repeat {
         push(l, n.get_label().name)
         n := n.get_parent() | break
      }
      return FilePath.from_list(l).str()
   end

   #
   # Invoked when a sub-tree is expanded (ie: the little + is
   # clicked).  An expansion event also includes contractions
   # too.
   #
   public handle_tree_expansion()
      local n

      n := tree.get_last_expanded()
      #
      # Check whether it was an expansion or a contraction.  If
      # an expansion, load the subtree and refresh the tree.
      #
      if n.is_expanded() then {
         load_subtree(n)
         tree.tree_structure_changed()
      }
   end

   private fmt_time(t)
      local now
      now := Time.get_system_seconds()
      return if now - t > 180 * 86400 then
         Time(t + Time.SYSTEM_BASE_OFFSET).format("  MMM dd  yyyy")
      else
         Time(t + Time.SYSTEM_BASE_OFFSET).format("  MMM dd HH:mm")
   end

   #
   # Given a Node n, load its children with the sub-directories.
   #
   public load_subtree(n)
      local s, e, r1, l
      s := get_full_path(n)
      l := get_directory_list(s)
      n.clear_children()
      every e := !!l do {
         r1 := TreeTableNode()
         r1.set_label(e)
         if e.stat.mode_str[1] == "d" then
            r1.set_always_expandable(&yes)
         r1.set_contents([Format.numeric_to_string(e.lstat.size, 0, ','), fmt_time(e.lstat.mtime), e.lstat.mode_str])
         n.add(r1)
      }
   end

   #
   # Read a directory.
   #
   public get_directory_list(s)
      local e, dir_list, file_list, l
      if not(l := Files.ucs_list(s, ListEntryWithIcon)) then
         return [[],[]]
      dir_list := []
      file_list := []
      every e := !l do {
         if not(Files.is_hidden(e.name)) then {
            if e.stat.mode_str[1] == "d" then
               put(dir_list, e)
            else
               put(file_list, e)
         }
      }
      return [isort(dir_list, Files.name_key),
              isort(file_list, Files.name_key)]
   end

   public component_setup()
      local root_node, w, bw
      self.setup()
      tree := tt.get_table_content()
      tree.
         set_fixed_col_w(16 + 2 * 2).
         set_item_paint(IconFilesItemPaint()).
         set_item_border(EmptyBorder().
                            set_insets(2, Gui.TEXT_INSET, 0, 0).
                            set_x_align(Align.L)).
         connect(self.handle_tree_expansion, Event.TREE_NODE_EXPANSION)

      bw := TableColumn().border.get_total_width()
      set_size(800, 600)
      use {
         w := Window(),
         {
            size_col.set_column_width(bw + w.text_width("000,000,000,000"))
            date_col.set_column_width(bw + w.text_width("  MMM 00 00:00"))
            bits_col.set_column_width(bw + w.text_width("drwxrwxrwx  "))
         }
      }

      root_node := TreeTableNode().set_label(ListEntry(u"/", Files.lstat("/"), Files.stat("/")))
      load_subtree(root_node)
      tt.table_content.set_root_node(root_node)
   end

   private on_close_button(ev)
      dispose()
   end

   private setup()
      local paint_2, layout_1, paint_1, paint_3, paint
      self.set_resize(&yes)
      paint := TextPaint("File")
      file_col := TableColumn().
         set_paint(paint).
         set_column_align(Align.L)
      paint_1 := TextPaint("Size")
      size_col := TableColumn().
         set_paint(paint_1).
         set_column_align(Align.R).
         set_column_width(75)
      paint_2 := TextPaint("Date")
      date_col := TableColumn().
         set_paint(paint_2).
         set_column_align(Align.L).
         set_column_width(100)
      paint_3 := TextPaint("Bits")
      bits_col := TableColumn().
         set_paint(paint_3).
         set_column_align(Align.L).
         set_column_width(100)
      tt := ItemPaintTreeTable().
         set_size("475", "265").
         set_align(Align.C, Align.T).
         clear_constraints().
         set_constraint("eol", &yes).
         set_constraint("x_fill", &yes).
         set_constraint("x_weight", 1.0).
         set_constraint("y_fill", &yes).
         set_constraint("y_weight", 1.0).
         set_select_mode(Select.ONE).
         set_contents([]).
         add_column(file_col).
         add_column(size_col).
         add_column(date_col).
         add_column(bits_col)
      self.add(tt)
      self.connect(self.on_close_button, Event.WINDOW_CLOSE_BUTTON)
      layout_1 := GridLayout().
         set_extra("cells")
      self.set_layout(layout_1)
   end
end

procedure main()
   local d
   d := TTExplorer()
   d.show_modal()
end

### Ivib-v2 layout ##
#CCanvas|I18SSuperClass Name|SDialog|SImport Name|Sgui|SButton Groups|L
#0SCheckbox Groups|L0SGen Indent|I3SGen Main|I1SGen Component Setup|I1S
#Gen Init Dialog|NSGen Constructor|NSDialog Struct|CCDialog|I1SWAttribs
#|T1NSresize|I1SName|STTExplorer|SIs Component|NSWidth|NSHeight|NSChild
#ren|L1CCanvasTable|I29SParent Canvas|X1SName|Stt|SClass Name|SItemPain
#tTreeTable|SImport Name|Sgui|SClass Variable|I1SX Fix|I1SY Fix|I1SW Fi
#x|I1SH Fix|I1SX Spec|NSY Spec|NSW Spec|S475|SH Spec|S265|SX Align|Sc|S
#Y Align|St|SZ|I0STab ord|I0SIs shaded|NSWAttribs|T0NSConstraints|T5NSx
#_weight|B1.0|Sx_fill|I1Sy_weight|B1.0|Sy_fill|I1Seol|I1STooltip|NSAcce
#l|NSLayout delegate|NSBorder opts|NSEvent Handlers|L0SClass Variable|I
#1SParent Component|X1SSelect Mode|Sone|SColumns|L4CCanvasTableColumn|I
#10SParent Canvas|X1SName|Sfile_col|SClass Name|STableColumn|SImport Na
#me|Sgui|SClass Variable|I1SPaint|CCanvasTextPaint|I6SParent Canvas|X1S
#Name|Spaint|SClass Name|STextPaint|SImport Name|Sgui|SClass Variable|N
#SStr|SFile|SColumn Width|NSInternal Alignment|Sl|SWAttribs|T0NSEvent H
#andlers|L0CCanvasTableColumn|I10SParent Canvas|X1SName|Ssize_col|SClas
#s Name|STableColumn|SImport Name|Sgui|SClass Variable|I1SPaint|CCanvas
#TextPaint|I6SParent Canvas|X1SName|Spaint_1|SClass Name|STextPaint|SIm
#port Name|Sgui|SClass Variable|NSStr|SSize|SColumn Width|I75SInternal 
#Alignment|Sr|SWAttribs|T0NSEvent Handlers|NCCanvasTableColumn|I10SPare
#nt Canvas|X1SName|Sdate_col|SClass Name|STableColumn|SImport Name|Sgui
#|SClass Variable|I1SPaint|CCanvasTextPaint|I6SParent Canvas|X1SName|Sp
#aint_2|SClass Name|STextPaint|SImport Name|Sgui|SClass Variable|NSStr|
#SDate|SColumn Width|I100SInternal Alignment|Sl|SWAttribs|T0NSEvent Han
#dlers|NCCanvasTableColumn|I10SParent Canvas|X1SName|Sbits_col|SClass N
#ame|STableColumn|SImport Name|Sgui|SClass Variable|I1SPaint|CCanvasTex
#tPaint|I6SParent Canvas|X1SName|Spaint_3|SClass Name|STextPaint|SImpor
#t Name|Sgui|SClass Variable|NSStr|SBits|SColumn Width|I100SInternal Al
#ignment|Sl|SWAttribs|T0NSEvent Handlers|NSInitial Focus|NSEvent Handle
#rs|L1L2SEvent.WINDOW_CLOSE_BUTTON|Son_close_button|SLayout delegate|CC
#anvasGridLayout|I8SDII val|NSDOI val|NSExtra|Scells|SName|Slayout_1|SC
#lass Name|SGridLayout|SImport Name|Sgui|SClass Variable|NSParent|X1
