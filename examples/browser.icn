import 
   gui, 
   io,
   graphics,
   posix,
   lang,
   http,
   net,
   ipl.options,
   ipl.browser

global opts

$load EXIT "rpp.EXIT_24.gif"
$load NEXT "rpp.NEXT_24.gif"
$load PREV "rpp.PREV_24.gif"
$load HOME "rpp.HOME_24.gif"
$load STOP "rpp.STOP_24.gif"
$load PASTE "rpp.PASTE_24.gif"
$load REFRESH0 "rpp.REFRESH_24.gif"

class BrowserDialog(Dialog, BrowserUI)
   private
      browser,
      prev_button,
      message_label,
      close_button,
      search_field,
      next_button,
      stop_button,
      home_button,
      paste_url_button,
      refresh_button,
      start_page,
      copy_page_url_item,
      save_page_item

   public end_dialog()
   end

   public init_dialog()
      local u
      if \start_page then {
         if u := URL.parse(start_page) then
            browser.goto(u,, Worker.NORMAL)
         else
            msg("Invalid url")
      } else
         on_home()
   end

   private on_close_button(ev)
      dispose()
   end

   private on_next(ev)
      browser.do_next()
   end

   private on_prev(ev)
      browser.do_prev()
   end

   private on_quit(ev)
      dispose()
   end
   
   public update_grey(gs)
      prev_button.set_is_shaded(gs.prev)
      next_button.set_is_shaded(gs.nxt)
      refresh_button.set_is_shaded(gs.refresh)
      copy_page_url_item.set_is_shaded(gs.copy_page)
      save_page_item.set_is_shaded(gs.save_page)
      stop_button.set_is_shaded(gs.stop)
   end

   private on_search_field(ev)
      local s, u
      s := search_field.get_contents()
      if *s = 0 then
         fail
      if u := URL.parse(s) then
         browser.goto(u,, Worker.NORMAL)
      else
         msg("Invalid url")
   end

   public msg(s, n)
      message_label.set(TextPaint(s), n)
   end

   public clear_msg()
      message_label.set()
   end

   public set_url_field_contents(val)
      search_field.set_contents(val)
   end

   private on_stop(ev)
      browser.cancel()
   end

   private on_home(ev)
      browser.goto(URL.parse(u"file://" || ucs(Files.get_path(Files.get_home()).child(".oibrowser.html").str())),, Worker.NORMAL)
   end

   private handle_paste_response(target_type, data, e)
      if /data then
         fail
      data ?:= tab(upto('\r\n'))
      search_field.set_contents(data)
   end

   private on_paste_url(ev)
      request_selection(Selection.CLIPBOARD, 
                        ["text/uri-list", Selection.UTF8_STRING_TARGET, Selection.STRING_TARGET], 
                        handle_paste_response, 
                        ev)
   end

   private on_refresh(ev)
      browser.do_refresh()
   end

   private on_icon_event(ev)
   end

   private on_copy_page_url_item(ev)
      browser.do_copy_page()
   end

   private on_save_page_item(ev)
      browser.do_save_page()
   end

   public new(s, cookies)
      cast(self,Dialog).new()
      setup()
      browser.set_ui(self)
      browser.set_cookies(cookies)
      browser.set_user_agent(\opts["agent"])
      if \opts["l"] then
         browser.set_log_http(&yes)
      start_page := s
      return
   end

   private setup()
      local quit_menu_item, paint_27, paint_32, paint_19, paint_24, paint_37, paint_29, paint_34, layout_1, panel_1, paint_13, paint_26, paint_31, paint_39, paint_23, paint_20, paint_28, paint_33, paint_12, paint_25, paint_30, paint_38, border_1, menu_bar_1, menu_1, layout_2
      self.set_label("Browser")
      self.set_min_height(250)
      self.set_resize(&yes)
      paint_13 := TextPaint("File")
      paint_38 := TextPaint("Copy page")
      copy_page_url_item := TextMenuItem().
         connect(on_copy_page_url_item, Event.ACTION).
         set_paint_mid(paint_38)
      paint_39 := TextPaint("Save page...")
      save_page_item := TextMenuItem().
         connect(on_save_page_item, Event.ACTION).
         set_paint_mid(paint_39)
      paint_12 := TextPaint("Quit")
      quit_menu_item := TextMenuItem().
         connect(on_quit, Event.ACTION).
         set_paint_mid(paint_12)
      menu_1 := Menu().
         set_accel("f").
         set_paint_mid(paint_13).
         add(copy_page_url_item).
         add(save_page_item).
         add(quit_menu_item)
      menu_bar_1 := MenuBar().
         set_size("100").
         clear_constraints().
         set_constraint("eol", &yes).
         set_constraint("l_inset", 0).
         set_constraint("r_inset", 0).
         set_constraint("t_inset", 0).
         set_constraint("x_fill", &yes).
         add(menu_1)
      self.add(menu_bar_1)
      paint_20 := ImagePaint().
         set_cache("rpp.EXIT_24")
      paint_19 := TextPaint("Close")
      close_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_19).
         set_accel("c").
         connect(self.on_close_button, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_20)
      paint_24 := ImagePaint().
         set_cache("rpp.HOME_24")
      paint_23 := TextPaint("Home")
      home_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_23).
         set_accel("n").
         connect(self.on_home, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_24)
      paint_26 := ImagePaint().
         set_cache("rpp.REFRESH_24")
      paint_25 := TextPaint("Refresh")
      refresh_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_25).
         connect(self.on_refresh, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_26)
      paint_28 := ImagePaint().
         set_cache("rpp.PREV_24")
      paint_27 := TextPaint("Prev")
      prev_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_27).
         connect(self.on_prev, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_28)
      paint_30 := ImagePaint().
         set_cache("rpp.NEXT_24")
      paint_29 := TextPaint("Next")
      next_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_29).
         connect(self.on_next, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_30)
      paint_32 := ImagePaint().
         set_cache("rpp.STOP_24")
      paint_31 := TextPaint("Stop")
      stop_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_31).
         connect(self.on_stop, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_32)
      paint_34 := ImagePaint().
         set_cache("rpp.PASTE_24")
      paint_33 := TextPaint("Paste URL")
      paste_url_button := IconButton().
         set_align(Align.L, Align.C).
         clear_constraints().
         set_tooltip(paint_33).
         connect(self.on_paste_url, Event.ACTION).
         set_no_click_focus(&yes).
         set_toggles(&no).
         set_paint(paint_34)
      layout_1 := GridLayout().
         set_doi(0).
         set_dii(2).
         set_extra("cells")
      panel_1 := Panel().
         clear_constraints().
         set_constraint("eol", &yes).
         set_constraint("x_align", Align.L).
         set_layout(layout_1).
         add(close_button).
         add(home_button).
         add(refresh_button).
         add(prev_button).
         add(next_button).
         add(stop_button).
         add(paste_url_button)
      self.add(panel_1)
      search_field := TextField().
         set_size("100").
         set_align(Align.C, Align.T).
         clear_constraints().
         set_constraint("eol", &yes).
         set_constraint("x_align", Align.L).
         set_constraint("x_fill", &yes).
         set_constraint("x_weight", 1.0).
         connect(self.on_search_field, Event.ACTION).
         set_contents("")
      self.add(search_field)
      browser := Browser().
         set_size("651", "337").
         set_font("sans,9").
         clear_constraints().
         set_constraint("eol", &yes).
         set_constraint("x_fill", &yes).
         set_constraint("x_weight", 1.0).
         set_constraint("y_fill", &yes).
         set_constraint("y_weight", 1.0)
      self.add(browser)
      paint_37 := TextPaint("")
      border_1 := CompoundBorder().
         set_outer(SunkenBorder()).
         set_inner(EmptyBorder().
            set_l_inset(3)).
         set_x_align(Align.L)
      message_label := MessageLabel().
         set_size("100").
         set_align(Align.L, Align.B).
         set_fg("red").
         clear_constraints().
         set_constraint("b_inset", 0).
         set_constraint("l_inset", 0).
         set_constraint("r_inset", 0).
         set_constraint("x_fill", &yes).
         set_border(border_1).
         set_paint(paint_37)
      self.add(message_label)
      self.connect(self.on_close_button, Event.WINDOW_CLOSE_BUTTON)
      self.connect(self.on_icon_event, Event.ICON)
      layout_2 := GridLayout().
         set_extra("cells")
      self.set_layout(layout_2)
      self.set_focus(search_field.find_focus())
   end
end

procedure main(a)
   local d, s, cookies, t, bak
   opts := options(a, "-k: -l! -agent:")
   cookies := \opts["k"] | System.getenv("GETURL_COOKIES")
   if \cookies then {
      t := decode(Files.file_to_string(cookies)) |
         write(FileStream.stderr, "Couldn't read/decode cookie file ", cookies, ": ", &why)
   }
   ImageCache.name_image("rpp.EXIT_24", EXIT)
   ImageCache.name_image("rpp.NEXT_24", NEXT)
   ImageCache.name_image("rpp.PREV_24", PREV)
   ImageCache.name_image("rpp.HOME_24", HOME)
   ImageCache.name_image("rpp.REFRESH_24", REFRESH0)
   ImageCache.name_image("rpp.PASTE_24", PASTE)
   ImageCache.name_image("rpp.STOP_24", STOP)
   s := ucs(a[1])
   /t := table()
   d := BrowserDialog(s, t)
   d.show_modal()

#   until Dispatcher.scheduler.empty() do
#      Dispatcher.scheduler.work()
#   d.show_modal()

   if \cookies then {
      bak := cookies || ".bak"
      Files.string_to_file(bak, encode(Cookie.expire_cookies(t))) | 
         stop("Couldn't encode to temp cookie file ", bak, ": ", &why)
      # Use rename not move to ensure it's atomic
      Files.rename(bak, cookies) | stop("Couldn't rename cookie file ", bak, ": ", &why)
   }
end

### Ivib-v2 layout: $.layout
