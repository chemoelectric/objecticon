############################################################################
#
#	File:     mset.icn
#
#	Subject:  Procedures for multi-sets
#
#	Author:   Jan P. de Ruiter
#
#	Date:     January 3, 1994
#
############################################################################
#
#   This file is in the public domain.
#
############################################################################
#
# The idea of the mset type is that no two identical data-structures can be
# present in a set, where identity is defined as "containing the same
# elements".
#
############################################################################

package ipl.mset

import lang(equals)
    
#
# The new insert operation. Insert2 always succeeds
#
procedure insert2(S,el)
    if equals(el,!S) then return S
    return insert(S,el)
end     

#
# The new member operation, that also detects equal-valued elements
#
procedure member2(S,el)
    if equals(!S,el) then return el
end

#
# The new delete operation, that detects equal-valued elements.
# Always succeeds
#
procedure delete2(S,el)
    local t
    every t := !S do if equals(t,el) then return delete(S,t)
    return S
end

#
# conversion of standard icon set into new mset.
#
procedure reduce2(iset)
    local temp
    temp := set()
    every insert2(temp,!iset)
    return temp
end

