import io,lang

procedure mktable()
   local t
   t := table(0)
   every 1 to 150 do
      insert(t, ?1000, ?100)
   return t
end

procedure e_iterator(t)
   suspend t[key(t)]
end

procedure randops(t,n)
   /n := 120
   every 1 to n do {
      case ?4 of {
         1: {
            insert(t, ?100, ?100)
         }
         2: {
            delete(t, ?100)
         }
         3: {
            ?t +:= 10
         }
         4: {
            ?t := ?100
         }
      }
   }
end

procedure main()
   local t, e1, e2, v1, v2
   every 1 to 100 do {
      t := mktable()
      e1 := create e_iterator(t)
      e2 := create !(t)
      every 1 to 2* (*t) do {
         randops(t,?4)
         v1 := @e1 | "NONE"
         v2 := @e2 | "NONE"
         v1 === v2 | stop("FAILED:", v1,"!=",v2,"   ",to_string(t))
      }
      every !t := 101
      every v1 := !t do
         v1 === 101 | stop("FAILED: not 101")
      e1 := e2 := &null
   }
   write("OK")
end
